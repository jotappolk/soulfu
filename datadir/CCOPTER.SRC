#define DUST_COLOR 10060364 
#define SMOKE_COLOR 128

//-----------------------------------------------------------------------
int ButtonEvent()
  int self, event, target, child, r, g, b
  float floorz, size

  self = FindSelf()
  event = self.event & 7
  if(self.event & 8)
    ButtonHandled()
    if(event == BUTTON_SPECIAL1 || event == BUTTON_SPECIAL2)
      if(self.charge == 50)
        target = FindTarget()
        if(target)
// !!!BAD!!!
// !!!BAD!!!
// !!!BAD!!!
          PEXPLODE.Effect(target.x, target.y, target.z, 0.0, 0.0, 1.8, DAMAGE_FIRE, 3, 1, FindIndex(self), self.team, "FILE:FIRE1.RGB", SMOKE_COLOR, 128)
          PSPARK.Effect(target.x, target.y, target.z, 8, 7)
// !!!BAD!!!
// !!!BAD!!!
// !!!BAD!!!
      self.target = MAX_CHARACTER
      self.charge = 0
  else
    if(STANDARD.RiderDismountButton())
      return 0
    if(event == BUTTON_LEFT)
      floorz = RoomWaterLevel()
      if(floorz < self.floorz)
        floorz = self.floorz
      if(floorz < 0.0)
        floorz = 0.0
      if(self.hoverz < (floorz+20.0))
        self.hoverz = self.z + 1.50
      return 0
    if(event == BUTTON_RIGHT)
      floorz = RoomWaterLevel()
      if(floorz < self.floorz)
        floorz = self.floorz
      if(self.hoverz > (floorz+2.5))
        self.hoverz = self.hoverz - 0.30
      else
        // Make able to scrape ground to grab keys & stuff...
        self.vz = self.vz - 0.03
      return 0
    if(event == BUTTON_SPECIAL1 || event == BUTTON_SPECIAL2)
      target = FindTarget()
      if(target == NULL)
        // Try to find a target...
        // First, check enemies only
        // Crates, barrels, chests, statues - to be done
        self.target = AcquireTarget(ACQUIRE_SEE_ENEMY, NULL, 75.0)
        target = FindTarget()
        self.charge = 0
      if(target)
        // We've got a target, so let's throw a lock on particle around 'em...
        if(self.charge < 50)
          self.charge = self.charge + 1
        r = self.charge<<2
        g = 255 - (self.charge<<2)
        b = 0
        size = (50-self.charge)*0.02
        size = size*size*6.0
        size = (size+2.0)*(target.boxsize+target.height)
        child = PSMOKE.Effect(target.x, target.y, target.z+(target.height*0.5), 0.0, 0.0, 0.0, size, 0.0, FALSE, (r<<16) | (g<<8) | b, self.charge<<2, 2)
        if(child)
          child.image = "FILE:=SIGHT.RGB"
          child.spin = (self.charge*500) - 25000
          child.vspin = 0

//-----------------------------------------------------------------------

int Event()
  int self, rider, target, lasthit, attacker, oldtarget, target_script
  float vx, vy, dis, dot, oldvx, oldvy

  self = FindSelf()

  if(self.event == EVENT_HIT_CHARACTER)
    target = FindByIndex(SystemGet(SYS_COLLISIONCHAR, 0, 0))
    if(target)
      if(target.daction != ACTION_KNOCK_OUT)
        CKART.KartApplyForce(target.x, target.y, target.vx-self.vx, target.vy-self.vy, target.boxsize)
      rider = FindByIndex(self.rider)
      if(rider && target.owner != FindIndex(self))
        // Don't allow empty Karts to run guys over...
        dot = self.vx*self.frontx + self.vy*self.fronty
        dis = (target.x-self.x)*self.frontx + (target.y-self.y)*self.fronty
        if((dis > 0.0 && dot > 0.0) || (dis < 0.0 && dot < 0.0))
//        facing = GetDirection(target.x, target.y)
//        if((facing == DIRECTION_FRONT && dot > 0.01) || (facing == DIRECTION_BACK && dot < -0.01))
          // We're driving toward our target...  Make sure it isn't our own turret...
          target_script = SystemGet(SYS_CHARACTERSCRIPTFILE, 0, SystemGet(SYS_COLLISIONCHAR, 0, 0))
          if(target_script != "FILE:CMINIGON.RUN" || target.target != FindIndex(self))
            if(dot < 0.0)
              dot = -dot
            if(target.team == self.team || target.team == TEAM_NEUTRAL)
              // Target is friendly/neutral...  Custom knock down stuff...
              if(!(target.vflags & VIRTUE_FLAG_BUMP_IMMUNE))
                if(target.hitsmax < 255 && self.rltimer == 0 && target.intimer == 0)
                  target.combo = 4
                  oldtarget = self.target
                  self.target = SystemGet(SYS_COLLISIONCHAR, 0, 0)
                  DamageTarget(DAMAGE_BASH, dot*3.0, 1)
                  self.target = oldtarget
//                  if(facing == DIRECTION_FRONT)
                  if(dis > 0.0)
                    self.eqright = (self.eqright)>>1
                  else
                    self.eqright = (self.eqright+255)>>1
            else
              // Running over an enemy...
              oldvx = self.vx
              oldvy = self.vy
              if(STANDARD.BumpDamageEvent(DAMAGE_BASH, dot*10.0, 1, TRUE, FALSE))
                self.spin = self.spin+32768
                self.vx = oldvx
                self.vy = oldvy
                if(target.nctimer < 40)
                  target.nctimer = 40
                if(target.action == ACTION_KNOCK_OUT || target.action == ACTION_KNOCK_OUT_STUN)
                  if(target.flatten > 128)
                    target.flatten = 128
                self.rltimer = 5
                if(dis > 0.0)
//                if(facing == DIRECTION_FRONT)
                  self.eqright = (self.eqright)>>1
                else
                  self.eqright = (self.eqright+255)>>1
                SystemSet(SYS_BUMPABORT, 0, 0, 0)
    return 0

  // Make mount/dismount work nicer...
  if(self.event == EVENT_MOUNTED)
    self.aitimer = 0
    rider = FindByIndex(self.rider)
    if(rider)
      self.team = rider.team
    if(self.hoverz < (self.floorz+4.0))
      self.hoverz = self.floorz + 4.0
    return 0
  if(self.event == EVENT_DISMOUNTED)
    self.team = TEAM_NEUTRAL
    self.aitimer = 1
    // fix for sight locking after dismounting
    self.target = MAX_CHARACTER
    self.charge = 0
    ButtonPress(BUTTON_UNPRESS, BUTTON_LEFT, 10)
    ButtonPress(BUTTON_UNPRESS, BUTTON_RIGHT, 10)
    ButtonPress(BUTTON_UNPRESS, BUTTON_SPECIAL1, 10)
    ButtonPress(BUTTON_UNPRESS, BUTTON_SPECIAL2, 10)
    return 0
  if(self.event == EVENT_DAMAGED)
    // Remember velocity...
    lasthit = self.lasthit
    target = self.target
    if(self.hits == 0)
      PEXPLODE.Effect(self.x, self.y, self.z, 0.0, 0.0, 3.34, DAMAGE_FIRE, 4, 1, FindIndex(self), TEAM_NEUTRAL, "FILE:FIRE1.RGB", SMOKE_COLOR, 255)
    STANDARD.SimpleDamageEvent()
    attacker = FindByIndex(self.lasthit)
    if(attacker)
      vx = self.x - attacker.x
      vy = self.y - attacker.y
      dis = vx*vx + vy*vy
      if(dis > 0.0001)
        dis = 0.30/sqrt(dis)
        vx = attacker.boxsize*vx*dis
        vy = attacker.boxsize*vy*dis
      vx = (vx + (target  - 32768)*0.0001) * 0.5
      vy = (vy + (lasthit - 32768)*0.0001) * 0.5
      self.target  = (vx * 10000.0) + 32768
      self.lasthit = (vy * 10000.0) + 32768
    else
      // Keep old velocity...
      self.lasthit = lasthit
      self.target = target
    return 0

  // Need to make funky backups of certain values...
  target = self.target
  lasthit = self.lasthit
  self.action = ACTION_KNOCK_OUT
  STANDARD.Event()
  self.target = target
  self.lasthit = lasthit
  self.daction = ACTION_BONING
  self.action = ACTION_BONING

//-----------------------------------------------------------------------
int FrameEvent()
  STANDARD.FrameEvent()

//-----------------------------------------------------------------------
int ModelSetup()
  int self
  self = FindSelf()

  ModelAssign(self+MODEL_BASE_FILE, "FILE:COPTER.RDY")
  ModelAssign(self+MODEL_BASE_TEX0, "FILE:HEDGEHOG.RGB")
  ModelAssign(self+MODEL_BASE_TEX1, "FILE:DUCTFAN.RGB")
  ModelAssign(self+MODEL_BASE_TEX2, "FILE:NBLUE.RGB")
  ModelAssign(self+MODEL_BASE_TEX3, "FILE:HEDGETIR.RGB")
  ModelAssign(self+MODEL_BASE_COLOR, WHITE)

//-----------------------------------------------------------------------
int GetName()
  StringClear(NAME_STRING)
  StringAppend(NAME_STRING, "G'nomish Copter", 256)
  STANDARD.NameAppendHits()

//-----------------------------------------------------------------------
int AIScript()
  int self
  self = FindSelf()
  self.gotox = self.x
  self.gotoy = self.y
  ButtonPress(BUTTON_UNPRESS, BUTTON_LEFT, 10)
  ButtonPress(BUTTON_PRESS_AND_HOLD, BUTTON_RIGHT, 10)
  self.aitimer = 10

//-----------------------------------------------------------------------
int Refresh()
  int self, i, time
  float cx, cy, vx, vy, x, y, z, angle, distance, speed, alpha
  self = FindSelf()


  // Spawn some dust...
  cx = self.x
  cy = self.y
  speed = 0.1
  distance = 4.0 - (self.z-self.floorz)*0.25
  if(distance < 0.0)
    distance = 0.0
  i = 0
  while(i < 3)
    angle = RollDice(1, 100)*3.6
    vx = sin(angle)
    vy = sin(angle+90.0)
    x = cx + vx*distance
    y = cy + vy*distance
    z = RoomHeightXY(x, y)
    vx = vx*speed
    vy = vy*speed
    alpha = (16.0 - (self.z-z))*8.0
    if(alpha > 0.0 && alpha < 144.0)
      if(alpha > 128.0)
        alpha = 128.0
      time = (alpha * 0.10) + 17.0
      PSMOKE.Effect(x, y, z, vx, vy, 0.05, 1.5, 0.05, FALSE, DUST_COLOR, alpha, time)
    i++


  // Make the ducted fans rotate...
  if(SystemGet(SYS_MAINGAMEFRAME, 0, 0) & 1)
    self.eframe = (self.eframe+8) & 31
  self.timer = 1

//-----------------------------------------------------------------------
int Spawn()
  int self
  self = FindSelf()

  self.team = TEAM_NEUTRAL
  self.boxsize = 3.0
  self.height = 2
  self.flags = CHAR_HOVER_ON | CHAR_CAN_BE_MOUNTED | CHAR_NO_BACKSTAB | CHAR_NO_STUCK_PARTS
  self.sflags = SCRIPT_NO_PETRIFY | SCRIPT_NO_POISON
  self.oflags = OTHER_FLAG_NO_MORPH | OTHER_FLAG_NO_HEARTS
  self.hoverz = self.z + 2.0
  self.vspin = 300
  self.hits = 10
  self.hitsmax = 10
  self.timer = 1
  self.action = ACTION_JUMP
  self.daction = ACTION_JUMP
  self.flyfric = 0.99
  ModelSetup()


//-----------------------------------------------------------------------
