#define EXPR_ASK      0
#define EXPR_CHARGE   1
#define EXPR_FOLLOW   3
#define EXPR_STAND    5
#define EXPR_THROUGH  7

//-----------------------------------------------------------------------
int GetName()
  STANDARD.ItemName("TALK", "F1-F4 FOR TEXT", 255, 0, 0, 0, 0)

//-----------------------------------------------------------------------
int ExpressionFromAxis(int axis)
  if((axis & AXIS_UP) && (axis & AXIS_RIGHT))
    return 2
  if((axis & AXIS_DOWN) && (axis & AXIS_RIGHT))
    return 4
  if((axis & AXIS_DOWN) && (axis & AXIS_LEFT))
    return 6
  if((axis & AXIS_UP) && (axis & AXIS_LEFT))
    return 8
  if(axis & AXIS_UP)
    return 1
  if(axis & AXIS_RIGHT)
    return 3
  if(axis & AXIS_DOWN)
    return 5
  if(axis & AXIS_LEFT)
    return 7
  return 0


//-----------------------------------------------------------------------
// Called when item is first used...
int Event()
  int self, child, expression
  self = FindSelf()
  if(self.rrtimer == 0 && (self.action == ACTION_STAND || self.action == ACTION_WALK || self.action == ACTION_JUMP || self.action == ACTION_DOUBLE || self.action == ACTION_SPECIAL_4))
    self.action = ACTION_SPECIAL_4
    self.daction = ACTION_SPECIAL_4

    child = PEXCLAIM.Effect(self.x, self.y, self.z-0.5+(self.height), 2.0, TRUE)
    if(child)
      child.image = "FILE:=ASK.RGB"
      expression = ExpressionFromAxis(self.baxis)
      if(expression == EXPR_CHARGE)
        child.image = "FILE:=CHARGE.RGB"
      //if(expression == 2)
      //  child.image = "FILE:=HELP.RGB"
      if(expression == EXPR_FOLLOW)
        child.image = "FILE:=FOLLOW.RGB"
      //if(expression == 4)
      //  child.image = "FILE:=KEY.RGB"
      if(expression == EXPR_STAND)
        child.image = "FILE:=STAND.RGB"
      //if(expression == 6)
      //  child.image = "FILE:=EXCLAIM.RGB"
      if(expression == EXPR_THROUGH)
        child.image = "FILE:=THROUGH.RGB"
      //if(expression == 8)
      //  child.image = "FILE:=TOWN.RGB"

//-----------------------------------------------------------------------
// Called when item is unpressed, to start proper animation
int Unpressed()
  int self, expression, pitch, i, target, count, door, script
  float dist, mindist, x, y
  self = FindSelf()
  ButtonHandled()


  // Send a coded network message...  Should be parsed out and
  // refitted with Language stuff by WMESSAGE when received...
  // WMESSAGE should also play the voice sound effect...
  if(self.action == ACTION_SPECIAL_4)
    self.daction = ACTION_STAND
    self.rrtimer = 30

    StringClear(String(0))
    StringAppend(String(0), "<TALK", 16)
    expression = ExpressionFromAxis(self.baxis)
    StringAppendNumber(String(0), expression, 16)
    StringAppend(String(0), ">", 16)
//    NetworkMessage(self.name, String(0), self.class)

    pitch = 256
    if(self.class == CLASS_NONE)
      ButtonSound()
    if(self.class == CLASS_SOLDIER)
      PlaySound("FILE:-SOLDI00.RAW", pitch, 255)
    if(self.class == CLASS_WIZARD)
      PlaySound("FILE:-WIZAR00.RAW", pitch, 255)
    if(self.class == CLASS_HEALER)
      PlaySound("FILE:-HEAL00.RAW", pitch, 255)
    if(self.class == CLASS_GNOME)
      PlaySound("FILE:-GNOME00.RAW", pitch, 255)
    if(self.class == CLASS_ELF)
      PlaySound("FILE:-ELF00.RAW",   pitch, 255)
    if(self.class == CLASS_MYSTIC)
      PlaySound("FILE:-MYSTI00.RAW", pitch, 255)
    if(self.class == CLASS_DWARF)
      PlaySound("FILE:-DWARF00.RAW", pitch, 255)
    if(self.class == CLASS_HUBBIN)
      PlaySound("FILE:-HUBBI00.RAW", pitch, 255)



    // Call a rally!
    if(expression == EXPR_FOLLOW)
      count = 1
      i = 0
      while(i < MAX_CHARACTER)
        target = FindByIndex(i)
        if(target)
          if(target.aitimer > 0 && target.team == self.team)
            target.aistate = STANDARD_AISTATE_RALLY
            target.aitimer = RollDice(1, 10)
            target.aimode = count
            target.target = FindIndex(self)
            count++
        i++

    // Charge!
    if(expression == EXPR_CHARGE)
      i = 0
      while(i < MAX_CHARACTER)
        target = FindByIndex(i)
        if(target)
          if(target.aitimer > 0 && target.team == self.team)
            target.aistate = STANDARD_AISTATE_CHARGE
            target.aitimer = RollDice(1, 10)
        i++

    // Stand your ground
    if(expression == EXPR_STAND)
      i = 0
      while(i < MAX_CHARACTER)
        target = FindByIndex(i)
        if(target)
          if(target.aitimer > 0 && target.team == self.team)
            target.aistate = STANDARD_AISTATE_STAND
            target.aitimer = RollDice(1, 10)
        i++

    // Get back to the door
    if(expression == EXPR_THROUGH)
      // find the nearest one
      mindist = -1.0
      i = 0
      while(i < MAX_CHARACTER)
        target = FindByIndex(i)
        if(target)
          script = SystemGet(SYS_CHARACTERSCRIPTFILE, 0, i)
          if(script == "FILE:CDOOR.RUN")
            x = self.x - target.x
            y = self.y - target.y
            dist = x*x + y*y
            if(mindist < 0.0 || dist < mindist)
              mindist = dist
              door = i
        i++

      // issue command
      if (mindist > 0.0)
        i = 0
        while(i < MAX_CHARACTER)
          target = FindByIndex(i)
          if(target)
            if(target.aitimer > 0 && target.team == self.team)
              target.aistate = STANDARD_AISTATE_DOOR
              target.aitimer = RollDice(1, 10)
              target.target = door
          i++

//-----------------------------------------------------------------------

