#define arrow_type self.misc7

//-----------------------------------------------------------------------
int Event()
  int self, target, critical, dex, owner, damage, wound, critical
  int child, image0, image1, smoke_color, damage_type, defwoun
  int owner
  float length, x, y, z

  self = FindSelf()



  if(DEFLECT.Event(80, 1.0, TRUE))
    return TRUE
  if((arrow_type & 3) > 0)
    if(!(self.flags & PART_IN_WATER))
      if(self.event == EVENT_HIT_FLOOR || self.event == EVENT_HIT_WALL || self.event == EVENT_HIT_CHARACTER || self.event == EVENT_BLOCKED)
        // Explosion effect...
        if((arrow_type & 3) == WEAPON_VARIANT_MAGIC)
          child = PSMOKE.Effect(self.lastx, self.lasty, self.lastz, 0.0, 0.0, 0.0, 1.0, 0.10, FALSE, WHITE, 255, 15)
          if(child)
            child.flags = child.flags | PART_LIGHT_ON
            child.image = "FILE:STAR0.RGB"
        else
          if((arrow_type & 3) == WEAPON_VARIANT_FIRE)
            image0 = "FILE:FIRE0.RGB"
            image1 = "FILE:FIRE1.RGB"
            smoke_color = 128
          else
            image0 = "FILE:ICE0.RGB"
            image1 = "FILE:ICE1.RGB"
            smoke_color = (4239600)
          child = PSMOKE.Effect(self.lastx, self.lasty, self.lastz, 0.0, 0.0, 0.0, 2.0, 0.20, FALSE, WHITE, 255, 5)
          if(child)
            child.flags = child.flags | PART_LIGHT_ON
            child.image = image0
          child = PSMOKE.Effect(self.lastx, self.lasty, self.lastz, 0.0, 0.0, 0.0, 3.0, 0.90, TRUE, WHITE, 255, 15)
          if(child)
            child.flags = child.flags | PART_LIGHT_ON
            child.image = image1
          PSMOKE.Effect(self.lastx, self.lasty, self.lastz, 0.0, 0.0, 0.0, 3.0, 0.05, FALSE, smoke_color, 255, 20)
  if(self.event == EVENT_HIT_CHARACTER)
    self.timer = 0
    target = FindTarget()
    if(target)
      // Calculate the damage bonus for different arrow types...
     
      damage_type = DAMAGE_EDGE
      damage = RollDice(1, 3)
      owner = FindOwner()
      if(owner)
        damage = damage + (owner.dex/10)
      wound = 1
      defwoun = target.defwoun
      if((arrow_type & 4))
        // Long Bow bonus...
        damage++
      if((arrow_type & 3) == WEAPON_VARIANT_MAGIC)
        if(target.defwoun < 128)
          // Do funny damage inversion thing when hitting undead...
          target.defwoun = -target.defwoun
        damage++
      if((arrow_type & 3) == WEAPON_VARIANT_FIRE)
        damage_type = DAMAGE_FIRE
        damage = damage + 2
      if((arrow_type & 3) == WEAPON_VARIANT_ICE)
        damage_type = DAMAGE_ICE
        damage = damage + 2
      if(owner.class == CLASS_ELF)
        damage = damage +1
    



      // Bonus for Luck...
      if(self.team == TEAM_GOOD)
        if(SystemGet(SYS_LUCK, 0, 0))
          damage++



      // Do critical hits...
      critical = FALSE
      owner = FindOwner()
      if(owner)
        dex = owner.dex
        if(dex > 50) 
          dex = 50
        if(target.team != self.team && self.team == TEAM_GOOD)
          if(!(target.flags & CHAR_NO_BACKSTAB))
            if(target.action < ACTION_KNOCK_OUT_BEGIN || target.action > ACTION_KNOCK_OUT_END)
              if(((RollDice(1, 100)-1)<<2) < dex)
                if(target.defwoun > 128 || target.defwoun == 0)
                  // Normal behavior...
                  wound = wound * RollDice(1, 3) + (dex/10)
                else
                  // Hitting an undead or something...
                  damage = damage * RollDice(1, 3) + (dex/10)
                PBACKSTB.Effect("FILE:=CRITICL.RGB", damage_type, target.x, target.y, target.z+target.height)
                critical = TRUE
                if(damage_type == DAMAGE_FIRE)
                  PBURNING.Effect(target, 4, self.owner)



      // Apply damage...
      DamageTarget(damage_type, damage, wound)
      target.defwoun = defwoun  // Undo funny vs. undead thing
      if((target.flags & CHAR_NO_STUCK_PARTS) || critical)
        // Don't stick into character, but still do damage...
        PSPARK.Effect(self.lastx, self.lasty, self.lastz, 10, 0)
        if(critical == FALSE)
          PBROKEN.Effect(arrow_type, self.lastx, self.lasty, self.lastz)
          GoPoof(POOF_SELF)
      else
        // Stick into character...
        self.x = self.lastx
        self.y = self.lasty
        self.z = self.lastz
        PSPARK.Effect(self.x, self.y, self.z, 10, 0)
        self.vx = 0.0
        self.vy = 0.0
        self.vz = 0.0
        AttachToTarget(255)
        self.length = 1.25
        self.image = "FILE:=ARROWB.RGB"
        self.flags = self.flags & (65535-PART_CHAR_COLLISION_ON-PART_WALL_COLLISION_ON)
        self.evtimer = 800 + (RollDice(1, 100)*5)
        arrow_type = 255  // Means it's stuck...
    return TRUE
  if(self.event == EVENT_HIT_WALL)
    PlaySound("FILE:-BOW02.RAW", 256, 255)
    PSPARK.Effect(self.lastx, self.lasty, self.lastz, 0, 4)
    PBROKEN.Effect(arrow_type, self.lastx, self.lasty, self.lastz)
    GoPoof(POOF_SELF)
  if(self.event == EVENT_HIT_WATER)
    // Arrows dull after hitting water...  Does not affect arrows spawned in water...
    self.timer = 0
    self.flags = self.flags & (65535-PART_CHAR_COLLISION_ON)
    STANDARD.PartWaterEvent(0.5)
  if(self.event == EVENT_HIT_FLOOR)
    PlaySound("FILE:-BOW02.RAW", 256, 255)
    PSPARK.Effect(self.lastx, self.lasty, self.lastz, 0, 4)
    PBROKEN.Effect(arrow_type, self.lastx, self.lasty, self.lastz)
    GoPoof(POOF_SELF)
  if(self.event == EVENT_TIMER)
    // Either unstick or initial firing...
    if(arrow_type == 255 || self.image != NULL)
      // Time to detach the arrow from the character it got stuck in...
      // Make sure we don't spawn broken arrow particles in a wall...
      x = self.x
      y = self.y
      target = FindTarget()
      if(target)
        z = RoomHeightXY(x, y)
        if(z > self.z)
          x = (target.x+x)*0.5
          y = (target.y+y)*0.5
          z = RoomHeightXY(x, y)
          if(z > self.z)
            x = target.x
            y = target.y
      PBROKEN.Effect(arrow_type, x, y, self.z)
      GoPoof(POOF_SELF)
    else
      // Time to let our arrow fly...
      self.flags = PART_GRAVITY_ON | PART_FIT_LENGTH_ON | PART_CHAR_COLLISION_ON | PART_WALL_COLLISION_ON
      self.length = 2.5
      self.width = 0.75
      self.image = "FILE:=ARROW.RGB"

      // Debug colors...
      if(SystemGet(SYS_DEBUGACTIVE, 0, 0))
        if(self.team == TEAM_MONSTER)
          self.image = "FILE:=YELLOW.RGB"
        if(self.team == TEAM_GOOD)
          self.image = "FILE:=GREEN.RGB"
        if(self.team == TEAM_EVIL)
          self.image = "FILE:=RED.RGB"

      // Set the refresh timer for magical arrows...
      if(arrow_type & 3)
        // ...So we get nifty little trail effects...
        self.timer = 1
  if(self.event == EVENT_BLOCKED)
    PlaySound("FILE:BLOCK.RAW", 225 + RollDice(1, 50), 255)
    PSPARK.Effect(self.lastx, self.lasty, self.lastz, 4, 1)
    PBROKEN.Effect(arrow_type, self.lastx, self.lasty, self.lastz)
    GoPoof(POOF_SELF)
  return FALSE

//-----------------------------------------------------------------------
int Spawn()
  int self, target
  self = FindSelf()



  self.image = NULL
  self.length = 1.0
  self.width = 1.0
  self.flags = PART_SPIN_ON
  target = FindTarget()
  if(target)
    // Left attack...  Bow should always be a left-handed weapon...
    AttachToTarget(1)

    // Modify the attachment matrix manually, so we get the particle
    // sittin' on the middle of our bone...
    self.misc0 = 70 // Length along weapon...  64 is at base...
    self.misc1 = 64
    self.misc2 = 64
    self.misc3 = 70
    self.misc4 = 64
    self.misc5 = 64

    // Set the facing of the particle so attack direction gets set correctly...
    self.spin = target.spin

    // Give us a callback to detach and fire...
    self.evtimer = 1
  else
    // Arrow was spawned using PARROW.FullEffect()
    self.flags = PART_GRAVITY_ON | PART_FIT_LENGTH_ON | PART_CHAR_COLLISION_ON | PART_WALL_COLLISION_ON
    self.length = 2.5
    self.width = 0.75
    self.image = "FILE:=ARROW.RGB"
  PlaySound("FILE:-BOW01.RAW", 256, 255)


//-----------------------------------------------------------------------
int Refresh()
  int self, type, image, smoke_color, child, alpha
  float x, y, z


  self = FindSelf()
  type = arrow_type & 3
  image = "FILE:SPARK2.RGB"
  alpha = 50
  smoke_color = 0
  if(type == WEAPON_VARIANT_FIRE)
    image = "FILE:FIRE0.RGB"
    smoke_color = (128)
    alpha = 75
  if(type == WEAPON_VARIANT_ICE)
    image = "FILE:ICE0.RGB"
    smoke_color = (4239600)
    alpha = 50




  x = self.x
  y = self.y
  z = self.z
  child = PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.5, 0.80, TRUE, WHITE, alpha, 4)
  if(child)
    child.flags = child.flags | PART_LIGHT_ON
    child.image = image
  if(smoke_color)
    PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.7, 0.80, TRUE, smoke_color, 128, 4)
  alpha = alpha-(alpha>>3)


  x = self.x - self.vx*0.25
  y = self.y - self.vy*0.25
  z = self.z - self.vz*0.25
  child = PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.5, 0.80, TRUE, WHITE, alpha, 4)
  if(child)
    child.flags = child.flags | PART_LIGHT_ON
    child.image = image
  if(smoke_color)
    PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.7, 0.80, TRUE, smoke_color, 128, 4)
  alpha = alpha-(alpha>>3)


  x = self.x - self.vx*0.50
  y = self.y - self.vy*0.50
  z = self.z - self.vz*0.50
  child = PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.5, 0.80, TRUE, WHITE, alpha, 4)
  if(child)
    child.flags = child.flags | PART_LIGHT_ON
    child.image = image
  if(smoke_color)
    PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.7, 0.80, TRUE, smoke_color, 128, 4)
  alpha = alpha-(alpha>>3)


  x = self.x - self.vx*0.75
  y = self.y - self.vy*0.75
  z = self.z - self.vz*0.75
  child = PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.5, 0.80, TRUE, WHITE, alpha, 4)
  if(child)
    child.flags = child.flags | PART_LIGHT_ON
    child.image = image
  if(smoke_color)
    PSMOKE.Effect(x, y, z, 0.0, 0.0, 0.0, 1.7, 0.80, TRUE, smoke_color, 128, 4)


  self.timer = 1


//-----------------------------------------------------------------------
int FullEffect(int type, float x, float y, float z, float vx, float vy, float vz, int team, int owner_index)
  int child
  SetSpawnOwner(owner_index)
  SetSpawnTeam(team)
  child = Spawn(PARTICLE, x, y, z, 0)
  if(child)
    child.vx = vx
    child.vy = vy
    child.vz = vz
    child.lastx = x-vx
    child.lasty = y-vy
    child.lastz = z-vz
    child.misc7 = type
    // Set the refresh timer for magical arrows...
    if(type & 3)
      child.timer = 1
  return child


//-----------------------------------------------------------------------
int Effect(int type, float vx, float vy, float vz, int cost_arrow)
  int self, child, index, item_type, found, i


  self = FindSelf()
  index = FindIndex(self)
  if(cost_arrow)
    // Look for an arrow to use...
    found = FALSE
    i = 224
    while(i < 246)
      if(i != 240 && i != 241)
        item_type = FileReadByte(self, i)
        if(item_type >= ITEM_QUIVER_10 && item_type <= ITEM_QUIVER_1)
          found = TRUE
          if(item_type == ITEM_QUIVER_1)
            item_type = ITEM_NONE
          else
            item_type++
          FileWriteByte(self, i, item_type)
          i = 255
      i++


    if(!found)
      // Don't have any arrows equip'd...
      if(IndexIsLocalPlayer(index))
        PlaySound("FILE:-BOW00.RAW", 256, 255)
      return FALSE
  SetSpawnTarget(index)
  SetSpawnOwner(index)
  SetSpawnTeam(self.team)
  child = Spawn(PARTICLE, self.x, self.y, self.z+self.height, 0)
  if(child)
    child.vx = vx
    child.vy = vy
    child.vz = vz
    child.lastx = self.x-self.vx
    child.lasty = self.y-self.vy
    child.lastz = self.z-self.vz
    child.misc7 = type & 7
  return child

//-----------------------------------------------------------------------

