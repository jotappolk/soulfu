#define pageturn      self.stat00w
#define flipdirection self.stat02w
#define pages         self.stat03w
#define icon0         self.stat04h
#define file          self.int2829

#define rog_depth     self.stat05w
#define rog_level     self.stat06w
#define rog_exp       self.stat07w
#define rog_gold      self.stat08w
#define rog_food      self.stat09w
#define rog_numchar   self.stat10l
#define rog_active    self.stat10h
#define rog_moves     self.stat11w
#define ROG_MAXCHAR   15

#define CLEAR_FULL    0
#define CLEAR_PARTIAL 1
#define CLEAR_RULES   2

#define SPECIAL_STILL   0
#define SPECIAL_WALK    1
#define SPECIAL_USE     2
#define SPECIAL_DIG     3

#define KEYPAD0  98
#define KEYPAD1  89
#define KEYPAD2  90
#define KEYPAD3  91
#define KEYPAD4  92
#define KEYPAD5  93
#define KEYPAD6  94
#define KEYPAD7  95
#define KEYPAD8  96
#define KEYPAD9  97
#define KEYSPACE  44
#define KEYD     7
#define KEYU     24

#define WEAPON_TORCH   0
#define WEAPON_MATTOCK 1
#define WEAPON_DAGGER  2
#define WEAPON_MACE    3
#define WEAPON_SWORD   4
#define WEAPON_GOBLIN  5

#define ARMOR_LEATHER  0
#define ARMOR_STUDDED  1
#define ARMOR_CHAIN    2
#define ARMOR_PLATE    3
#define ARMOR_SKULTON  4
#define ARMOR_TROLL    5
#define ARMOR_DRAGON   6


//-----------------------------------------------------------------------
Spawn()
  int    self
  self = FindSelf()
  pages = 0
  pageturn = 0
  flipdirection = 0
  icon0 = 0
  file = NULL
  rog_active = FALSE


//-----------------------------------------------------------------------
int RogDamageCharacter(int chartohurt, int damage, int type)
  int self, hits, armor, resistance, index

  self = FindSelf()
  if(chartohurt < rog_numchar)
    // Check dexterity to see if it's a hit...
    index = 2250+(chartohurt*25)
    hits = FileReadByte(file, index+12)
    armor = FileReadByte(file, index+17)
    resistance = 0
    if(armor == ARMOR_LEATHER)
      if(type == DAMAGE_EDGE)
        resistance = 1
    if(armor == ARMOR_STUDDED)
      if(type == DAMAGE_EDGE)
        resistance = 2
    if(armor == ARMOR_CHAIN)
      if(type == DAMAGE_EDGE)
        resistance = 3
    if(armor == ARMOR_PLATE)
      if(type == DAMAGE_EDGE)
        resistance = 6
      if(type == DAMAGE_BASH)
        resistance = 3
    if(armor == ARMOR_SKULTON)
      if(type == DAMAGE_EDGE)
        resistance = 2
      if(type == DAMAGE_BASH)
        damage = damage<<1
    if(armor == ARMOR_TROLL)
      if(type == DAMAGE_EDGE)
        resistance = 6
      if(type == DAMAGE_BASH)
        resistance = 3
      if(type == DAMAGE_FIRE)
        damage = damage<<1
    if(armor == ARMOR_DRAGON)
      if(type == DAMAGE_EDGE)
        resistance = 6
      if(type == DAMAGE_BASH)
        resistance = 3
      if(type == DAMAGE_FIRE)
        resistance = 3
    damage = damage - resistance
    if(damage < 0)
      damage = 0
    if(damage > hits)
      hits = 0
    else
      hits = hits-damage
    FileWriteByte(file, index+12, hits)
  return damage

//-----------------------------------------------------------------------
int RogDestroyCharacter(int chartopoof)
  int self, i, value, write, killspawn, x, y
  int maxhit, intelligence

  killspawn = 0
  self = FindSelf()
  if(chartopoof < rog_numchar && chartopoof > 0)
    rog_numchar--
    write = 2250+(chartopoof*25)
    x = FileReadByte(file, write+9)
    y = FileReadByte(file, write+10)
    if(chartopoof != 0)
      // Add to our experience
      maxhit = FileReadByte(file, write+11)
      intelligence = FileReadByte(file, 2265)
      rog_exp = rog_exp + (intelligence*maxhit)


      // Do level gains...
      maxhit = 0
      if(rog_level == 1 && rog_exp >= 300)
        maxhit = 1
      if(rog_level == 2 && rog_exp >= 800)
        maxhit = 1
      if(rog_level == 3 && rog_exp >= 1500)
        maxhit = 1
      if(rog_level == 4 && rog_exp >= 2400)
        maxhit = 1
      if(rog_level == 5 && rog_exp >= 3500)
        maxhit = 1
      if(rog_level == 6 && rog_exp >= 4800)
        maxhit = 1
      if(rog_level == 7 && rog_exp >= 6300)
        maxhit = 1


      // Do stat bonus
      if(maxhit)
        rog_level++
        FileWriteByte(file, 2261, FileReadByte(file, 2261)+2)
        FileWriteByte(file, 2262, FileReadByte(file, 2262)+2)
        FileWriteByte(file, 2263, FileReadByte(file, 2263)+1)
        FileWriteByte(file, 2264, FileReadByte(file, 2264)+1)
        FileWriteByte(file, 2265, FileReadByte(file, 2265)+1)
        RogMessage("You gained a level!")

      
      
    killspawn = FileReadByte(file, write+18)
    while(chartopoof < rog_numchar)
      i = 0
      while(i < 25)
        value = FileReadByte(file, write+25+i)
        FileWriteByte(file, write+i, value)
        i++
      write = write+25
      chartopoof++
  if(killspawn)
    RogMessage("It dropped something...")
    RogSpawnCharacter(x, y, killspawn)



//-----------------------------------------------------------------------
int RogSpawnCharacter(int x, int y, int icon)
  int self, name, hits, strength, dexterity,
  int intelligence, weapon, armor, killspawn
  int index, i, value, special

  self = FindSelf()
  if(rog_numchar < ROG_MAXCHAR)
    index = (rog_numchar*25) + 2250


    // Make sure items don't spawn on stairs (for killspawn...)
    value = '.'
    if(icon == ')' || icon == '[' || icon == '$' || icon == '%')
      value = FileReadByte(file, 1875+(y*25)+x)
    if(value == '.' || value == 140)


      // Defaults
      name = "Blah"
      hits = 1
      strength = RollDice(1, 6) + 4
      dexterity = RollDice(1, 6) + 4
      intelligence = RollDice(1, 6) + 4
      weapon = 0
      armor = 0
      killspawn = 0
      special = SPECIAL_STILL


      // Stats
      if(icon == '@')
        name = "Player"
        hits = RollDice(2, 4) + 4
        strength = RollDice(2, 6) + 6
        dexterity = RollDice(2, 6) + 6
        intelligence = RollDice(2, 6) + 6
      if(icon == ')')
        name = "Weapon"
        weapon = RollDice(1,WEAPON_SWORD)
        if((weapon+1) > rog_depth)
          weapon = RollDice(1,WEAPON_SWORD-1)
        if(weapon == WEAPON_MATTOCK)
          weapon = WEAPON_MACE
      if(icon == 'M')
        name = "Weapon"
        weapon = WEAPON_MATTOCK
        icon = ')'
      if(icon == '[')
        name = "Armor"
        armor = RollDice(1,ARMOR_PLATE)
        if((armor+2) > rog_depth)
          armor = RollDice(1,ARMOR_PLATE-1)
      if(icon == '$')
        name = "Gold"
      if(icon == 'G')
        name = "Goblin"
        special = SPECIAL_WALK
        hits = RollDice(1, 2)+2
        weapon = WEAPON_GOBLIN
        armor = ARMOR_LEATHER
        if(RollDice(1, 4) == 1)
          killspawn = '$'
        if(RollDice(1, 4) == 1)
          killspawn = 'M'
          weapon = WEAPON_MATTOCK
          special = SPECIAL_DIG
      if(icon == 'S')
        name = "Skulton"
        special = SPECIAL_WALK
        hits = RollDice(2, 2)+2
        weapon = WEAPON_MATTOCK
        armor = ARMOR_SKULTON
        killspawn = 2
      if(icon == 'P')
        name = "Porc"
        special = SPECIAL_WALK
        hits = RollDice(1, 4)+4
        weapon = WEAPON_DAGGER
        armor = ARMOR_STUDDED
        killspawn = 4
      if(icon == '.')
        name = "Stalker"
        special = SPECIAL_WALK
        hits = RollDice(1, 4)+4
        dexterity = 30
        weapon = WEAPON_GOBLIN
        armor = ARMOR_LEATHER
        killspawn = '$'
      if(icon == 'T')
        name = "Troll"
        special = SPECIAL_WALK
        hits = RollDice(3, 4)+5
        strength = 50
        dexterity = 15
        weapon = WEAPON_SWORD
        armor = ARMOR_TROLL
        killspawn = 5
      if(icon == 'D')
        name = "Dragon"
        special = SPECIAL_WALK
        hits = RollDice(8, 4)+8
        strength = 100
        dexterity = 30
        weapon = WEAPON_SWORD
        armor = ARMOR_DRAGON
        killspawn = 5



      // Random killspawn...
      if(killspawn > 0 && killspawn < 6)
        if(killspawn == 5)
          i = 1
          killspawn = 4
        else
          i = RollDice(1, 2)
        if(i == 1)
          i = RollDice(1, killspawn)
          killspawn = ')'
          if(i == 2)
            killspawn = '['
          if(i == 3)
            killspawn = '$'
          if(i == 4)
            killspawn = '%'
        else
          killspawn = 0



      // Fill in the new character's data...
      FileWriteByte(file, index,    icon)
      i = 0
      value = StringGetValue(name, i)
      while(value && i < 7)
        FileWriteByte(file, index+1+i, value)
        i++
        value = StringGetValue(name, i)
      while(i < 8)
        FileWriteByte(file, index+1+i, 0)
        i++
      FileWriteByte(file, index+9,  x)
      FileWriteByte(file, index+10, y)
      FileWriteByte(file, index+11, hits)  // Maxhits...
      FileWriteByte(file, index+12, hits)
      FileWriteByte(file, index+13, strength)
      FileWriteByte(file, index+14, dexterity)
      FileWriteByte(file, index+15, intelligence)
      FileWriteByte(file, index+16, weapon)
      FileWriteByte(file, index+17, armor)
      FileWriteByte(file, index+18, killspawn)
      FileWriteByte(file, index+19, special)
      rog_numchar++



//-----------------------------------------------------------------------
int RogDrawCharacters()
  int self, i, x, y, index, icon, tile

  self = FindSelf()
  i = 0
  index = 2250
  while(i < rog_numchar)
    x = FileReadByte(file, index+9)
    if(x>=0 && x<25)
      y = FileReadByte(file, index+10)
      if(y>=0 && y<15)
        tile = FileReadByte(file, 750+(y*25)+x)
        if(tile == '.' || tile == ')' || tile == '[' || tile == 140 || tile == '>' || tile == '%' || tile == '$')
          icon = FileReadByte(file, index)
          FileWriteByte(file, 750+(y*25)+x, icon)
    index = index+25
    i++

//-----------------------------------------------------------------------
int RogDrawDisplay(int x, int y, int radius, int rays)
  int self, i, j
  float angle
  float xpos, ypos
  float xadd, yadd
  int checkx, checky, value

  self = FindSelf()
  i = 0
  while(i < rays)
    angle = i * 360.0 / rays
    xpos = x+0.5
    ypos = y+0.5
    xadd = sin(angle)
    yadd = sin(angle+90)
    j = 0
    while(j < radius)
      checkx = xpos
      if(checkx >= 0 && checkx < 25)
        checky = ypos
        if(checky >= 0 && checky < 15)
          value = FileReadByte(file, 1875 + (checky*25) + checkx)
          if(value == '#' || value == 139 || value == 'S')
            j = radius
            if(value == 'S')
              value = '#'
          else
            xpos = xpos + xadd
            ypos = ypos + yadd
          FileWriteByte(file, 750 + (checky*25) + checkx, value)
      j++
    i++

//-----------------------------------------------------------------------
int RogClearDisplay(int type)
  int self, i, value
  self = FindSelf()
  if(type == CLEAR_FULL)
    i = 0
    while(i < 375)
      FileWriteByte(file, 750+i, ' ')
      i++
  else
    if(type == CLEAR_PARTIAL)
      i = 0
      while(i < 375)
        value = FileReadByte(file, 750+i)
        if(value != '#' && value != '>' && value != 139 && value != 140)
          FileWriteByte(file, 750+i, ' ')
        i++
    else
      i = 0
      while(i < 375)
        value = FileReadByte(file, 1500+i)
        FileWriteByte(file, 750+i, value)
        i++
      // Clear stats too...
      RogDrawStats(0, 0, 0, 0, 0, 0)
      RogDrawEquipment(-1, -1, 0)


//-----------------------------------------------------------------------
int RogMessage(int message)
  int self, i, value
  self = FindSelf()
  i = 0
  while(i < 75)
    value = FileReadByte(file, 675+i)
    FileWriteByte(file, 650+i, value)
    i++
  i = 0
  value = StringGetValue(message, i)
  while(value && i < 25)
    FileWriteByte(file, 725+i, value)
    i++    
    value = StringGetValue(message, i)
  while(i < 25)
    FileWriteByte(file, 725+i, ' ')
    i++


//-----------------------------------------------------------------------
int RogDrawEquipment(int weapon, int armor, int gold)
  int self, i, value, name
  self = FindSelf()


  // Weapon
  name = "Torch"
  if(weapon == WEAPON_MATTOCK)
    name = "Mattock"
  if(weapon == WEAPON_DAGGER)
    name = "Dagger"
  if(weapon == WEAPON_MACE)
    name = "Mace"
  if(weapon == WEAPON_SWORD)
    name = "Sword"
  i = 0
  if(weapon >= 0 && weapon <= WEAPON_SWORD)
    value = StringGetValue(name, i)
    while(value)
      FileWriteByte(file, 525+i, value)
      i++
      value = StringGetValue(name, i)
  while(i < 25)
    FileWriteByte(file, 525+i, ' ')
    i++


  // Armor
  name = "Leather Jerkin"
  if(armor == ARMOR_STUDDED)
    name = "Studded Leather"
  if(armor == ARMOR_CHAIN)
    name = "Chainshirt"
  if(armor == ARMOR_PLATE)
    name = "Platemail"
  i = 0
  if(armor >= 0 && armor <= ARMOR_PLATE)
    value = StringGetValue(name, i)
    while(value)
      FileWriteByte(file, 550+i, value)
      i++
      value = StringGetValue(name, i)
  while(i < 25)
    FileWriteByte(file, 550+i, ' ')
    i++


  // Gold
  i = 0
  while(i < 25)
    FileWriteByte(file, 575+i, ' ')
    i++
  if(gold > 0)
    value = gold
    StringClear(String(0))
    StringAppendNumber(String(0), value, 256)
    StringAppend(String(0), " Gold", 256)
    i = 0
    value = StringGetValue(String(0), i)
    while(value)
      FileWriteByte(file, 575+i, value)
      i++
      value = StringGetValue(String(0), i)


//-----------------------------------------------------------------------
int RogDrawStats(int maxhits, int hits, int strength, int dexterity, int intelligence, int level)
  int self, i, value, length
  self = FindSelf()

  // Hits
  i = 0
  if(maxhits > 20)
    maxhits = 20
  if(hits > 20)
    hits = 20
  while(hits > 0)
    FileWriteByte(file, 405+i, 6)
    maxhits--
    hits--
    i++
  while(maxhits > 0)
    FileWriteByte(file, 405+i, 7)
    maxhits--
    i++
  while(i < 20)
    FileWriteByte(file, 405+i, ' ')
    i++    


  // Str
  value = strength
  StringClear(String(0))
  StringAppendNumber(String(0), value, 256)
  i = 0
  length = StringLength(String(0))
  while(i < length)
    value = StringGetValue(String(0), i)
    FileWriteByte(file, 432-length+i, value)
    i++
  while(length < 3)
    length++
    FileWriteByte(file, 432-length, ' ')
  

  // Dex
  value = dexterity
  StringClear(String(0))
  StringAppendNumber(String(0), value, 256)
  i = 0
  length = StringLength(String(0))
  while(i < length)
    value = StringGetValue(String(0), i)
    FileWriteByte(file, 457-length+i, value)
    i++
  while(length < 3)
    length++
    FileWriteByte(file, 457-length, ' ')


  // Int
  value = intelligence
  StringClear(String(0))
  StringAppendNumber(String(0), value, 256)
  i = 0
  length = StringLength(String(0))
  while(i < length)
    value = StringGetValue(String(0), i)
    FileWriteByte(file, 445-length+i, value)
    i++
  while(length < 3)
    length++
    FileWriteByte(file, 445-length, ' ')


  // Level
  value = level
  StringClear(String(0))
  StringAppendNumber(String(0), value, 256)
  i = 0
  length = StringLength(String(0))
  while(i < length)
    value = StringGetValue(String(0), i)
    FileWriteByte(file, 470-length+i, value)
    i++
  while(length < 3)
    length++
    FileWriteByte(file, 470-length, ' ')


//-----------------------------------------------------------------------
int RogRectArea(int tlx, int tly, int brx, int bry)
  int self, x, y, index


  // Check bounds...
  self = FindSelf()
  if(tlx < 1)
    tlx = 1
  if(tly < 1)
    tly = 1
  if(brx > 23)
    brx = 23
  if(bry > 13)
    bry = 13

 
  // Clear the area...
  y = tly
  index = 1875 + (y*25)
  while(y <= bry)
    x = tlx
    while(x <= brx)
      FileWriteByte(file, index+x, '.')
      x++
    index = index+25
    y++  
 

//-----------------------------------------------------------------------
int RogGenerateMapArea(int x, int y, int branch, int direction)
  int self, tlx, tly, brx, bry, index, xadd, yadd
  int size

  if(branch > 0)
    self = FindSelf()


    // Make a hallway
    xadd = 0
    yadd = 0
    direction = direction&3
    if(direction==0)
      yadd = -1
    if(direction==1)
      xadd = 1
    if(direction==2)
      yadd = 1
    if(direction==3)
      xadd = -1
    size = RollDice(1, 4)+4
    size = size & 254
    while(size > 0)
      if(x < 1)
        x = 1
        size = 0
        branch = 0
      if(y < 1)
        y = 1
        size = 0
        branch = 0
      if(x > 23)
        x = 23
        size = 0
        branch = 0
      if(y > 13)
        y = 13
        size = 0
        branch = 0
      FileWriteByte(file, 1875+(y*25)+x, '.')
      x = x+xadd
      y = y+yadd
      size--


    // Spawn more halls...
    if(branch > 1)
      if(RollDice(1, 2) == 1)
        RogGenerateMapArea(x, y, branch-1, direction+1)
        if(RollDice(1, 2) == 1)
          RogGenerateMapArea(x, y, branch-1, direction+3)
      else
        RogGenerateMapArea(x, y, branch-1, direction+3)
        if(RollDice(1, 2) == 1)
          RogGenerateMapArea(x, y, branch-1, direction+1)


      // Plop room on end of hall...
      if(RollDice(1, 3) == 1)
        RogRectArea(x-RollDice(1,3), y-RollDice(1,3), x+RollDice(1,3), y+RollDice(1,3))
      else
        // Didn't spawn a room, so maybe another hall...
        if(RollDice(1, 2) == 1)
          RogGenerateMapArea(x, y, branch-1, direction)


//-----------------------------------------------------------------------
int RogClearMap()
  int self, i

  self = FindSelf()
  i = 0
  while(i < 375)
    FileWriteByte(file, 1875+i, '#')
    i++

//-----------------------------------------------------------------------
int RogDoorTile(int x, int y)
  int top, left, right, bottom, self, center, okay

  self = FindSelf()
  center = FileReadByte(file, 1875+(y*25)+x)
  if(center == '.')
    top = FileReadByte(file, 1875+(y*25)+x-25)
    left = FileReadByte(file, 1875+(y*25)+x-1)
    right = FileReadByte(file, 1875+(y*25)+x+1)
    bottom = FileReadByte(file, 1875+(y*25)+x+25)
    okay = FALSE
    if(top == '#' && bottom == '#')
      if(left == '.' && right == '.')
        okay = TRUE
    if(left == '#' && right == '#')
      if(top == '.' && bottom == '.')
        okay = TRUE
    if(okay)
      if(RollDice(1, 2) == 1)
        FileWriteByte(file, 1875+(y*25)+x, 139)
      else
        FileWriteByte(file, 1875+(y*25)+x, 'S')


//-----------------------------------------------------------------------
int RogStairTile(int x, int y)
  int tile, self

  self = FindSelf()
  tile = FileReadByte(file, 1875+(y*25)+x)
  if(tile == '.')
    tile = FileReadByte(file, 1875+(y*25)+x-1)
    if(tile == '.')
      FileWriteByte(file, 1875+(y*25)+x, '>')
      return FALSE
  return TRUE

//-----------------------------------------------------------------------
int RogDoorMap()
  int x, y, i, keepgoing

  i = 0
  while(i < 100)
    x = RollDice(1, 23)
    y = RollDice(1, 13)
    RogDoorTile(x, y)
    i++

  keepgoing = TRUE
  i = 0
  while(keepgoing && i < 1000)
    x = RollDice(1, 23)
    y = RollDice(1, 13)
    keepgoing = RogStairTile(x, y)
    i++


//-----------------------------------------------------------------------
int RogSpawnAll()
  int self, tile, i, x, y, icon, monster, j, index

  self = FindSelf()
  i = 0
  while(i < 1000 && rog_numchar < ROG_MAXCHAR && rog_numchar < (rog_depth+5))
    x = RollDice(1, 23)
    y = RollDice(1, 13)
    tile = FileReadByte(file, 1875+(y*25)+x)
    if(tile == '.')
      j = 0
      index = 2250
      while(j < rog_numchar)
        if(FileReadByte(file, index+9) == x)
          if(FileReadByte(file, index+10) == y)
            tile = '#'
            j = rog_numchar
        index = index + 25
        j++
      if(tile == '.')
        monster = RollDice(1, 3)-1
        if(monster)
          // Spawn a monster
          monster = RollDice(1, rog_depth)>>1
          icon = 'G'
          if(monster == 1)
            icon = 'S'
          if(monster == 2)
            icon = 'P'
          if(monster == 3)
            icon = '.'
          if(monster == 4)
            icon = 'T'
          if(monster == 5)
            icon = 'D'
        else
          // Spawn an item...
          monster = RollDice(1, 5)
          icon = ')'
          if(monster == 1)
            icon = '['
          if(monster == 2)
            icon = '%'
          if(monster > 2)
            icon = '$'
        RogSpawnCharacter(x, y, icon)
    i++


//-----------------------------------------------------------------------
int RogGenerateMap(int x, int y)
  int self

  self = FindSelf()
  rog_depth++
  RogClearDisplay(CLEAR_FULL)
  RogClearMap()
  RogGenerateMapArea(x, y, 4, 0)
  RogGenerateMapArea(x, y, 4, 1)
  RogGenerateMapArea(x, y, 4, 2)
  RogGenerateMapArea(x, y, 4, 3)
  RogDoorMap()
  if(rog_numchar > 1)
    rog_numchar = 1
  RogSpawnAll()

//-----------------------------------------------------------------------
int RogStartGame()
  int self, value, x, y
  self = FindSelf()
  RogMessage("\205\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\207")
  RogMessage("\237Welcome to the Halls of\239")
  RogMessage("\237     Unhappiness       \239")
  RogMessage("\253\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\254\255")
  rog_depth = 0
  rog_level = 1
  rog_exp = 0
  rog_gold = 0
  rog_food = 300
  rog_numchar = 0
  rog_moves = 0
  rog_active = TRUE


  x = RollDice(1, 23)
  y = RollDice(1, 13)
  RogSpawnCharacter(x, y, '@')
  RogGenerateMap(x, y)

//-----------------------------------------------------------------------
int RogEndGame()
  int self, score
  self = FindSelf()



  RogMessage("You have been defeated")


  // on level ....., with a
  StringClear(String(0))
  StringAppend(String(0), "on level ", 256)
  StringAppendNumber(String(0), rog_depth, 256)
  StringAppend(String(0), ", with a", 256)
  RogMessage(String(0))


  // score of ...... points.
  score = 50 + rog_moves + rog_gold + rog_exp + (rog_depth*100)
  StringClear(String(0))
  StringAppend(String(0), "score of ", 256)
  StringAppendNumber(String(0), score, 256)
  StringAppend(String(0), " points.", 256)
  RogMessage(String(0))


  // Finish up...
  RogClearDisplay(CLEAR_RULES)
  rog_active = FALSE


//-----------------------------------------------------------------------
// Returns 0 if no key pressed...  Otherwise returns one of the KEYxxxx
// defines...
int RogGetKey()
  int key

  key = 0
  if(SystemGet(SYS_KEYPRESSED, KEYPAD0, 0))
    key = KEYPAD0
  if(SystemGet(SYS_KEYPRESSED, KEYPAD1, 0))
    key = KEYPAD1
  if(SystemGet(SYS_KEYPRESSED, KEYPAD2, 0))
    key = KEYPAD2
  if(SystemGet(SYS_KEYPRESSED, KEYPAD3, 0))
    key = KEYPAD3
  if(SystemGet(SYS_KEYPRESSED, KEYPAD4, 0))
    key = KEYPAD4
  if(SystemGet(SYS_KEYPRESSED, KEYPAD5, 0))
    key = KEYPAD5
  if(SystemGet(SYS_KEYPRESSED, KEYPAD6, 0))
    key = KEYPAD6
  if(SystemGet(SYS_KEYPRESSED, KEYPAD7, 0))
    key = KEYPAD7
  if(SystemGet(SYS_KEYPRESSED, KEYPAD8, 0))
    key = KEYPAD8
  if(SystemGet(SYS_KEYPRESSED, KEYPAD9, 0))
    key = KEYPAD9
  if(SystemGet(SYS_KEYPRESSED, KEYSPACE, 0))
    key = KEYSPACE
  return key


//-----------------------------------------------------------------------
int RogAttack(int attacker, int defender)
  int self, weapon, damage, wound, type, defdata, dexterity


  self = FindSelf()
  if(attacker < rog_numchar && defender < rog_numchar)
    StringClear(String(0))
    attacker = 2250+(attacker*25)
    defdata = 2250+(defender*25)
    dexterity = FileReadByte(file, attacker+14) + 10 - (FileReadByte(file, defdata+14)>>1)
    if(RollDice(1,20) < dexterity)
      weapon = FileReadByte(file, attacker+16)
      damage = 0
      wound = 0
      type = DAMAGE_EDGE
      if(weapon == WEAPON_TORCH)
        damage = RollDice(1,2)
        type = DAMAGE_FIRE
      if(weapon == WEAPON_MATTOCK)
        damage = RollDice(1,2)
        wound = RollDice(1,2)
      if(weapon == WEAPON_DAGGER)
        damage = RollDice(1,2)+1
        wound = RollDice(1,2)-1
      if(weapon == WEAPON_MACE)
        damage = RollDice(1,4)
        wound = RollDice(1,2)
        type = DAMAGE_BASH
      if(weapon == WEAPON_SWORD)
        damage = RollDice(1,4)+2
        wound = RollDice(1,2)
      if(weapon == WEAPON_GOBLIN)
        damage = RollDice(1,2)
        wound = RollDice(1,2)-1
      damage = RogDamageCharacter(defender, damage, type)
      damage = damage + RogDamageCharacter(defender, wound, DAMAGE_WOUND)


      // Hit for damage...
      if(defender == 0)
        StringAppend(String(0), "The ", 256)
        StringAppend(String(0), file+attacker+1, 256)
        StringAppend(String(0), " hits for ", 256)
        StringAppendNumber(String(0), damage, 256)
        StringAppend(String(0), "!", 256)
        RogMessage(String(0))
      else
        if(FileReadByte(file, defdata+12) == 0)
          // Defeated monster
          StringAppend(String(0), "You defeated the ", 256)
          StringAppend(String(0), file+defdata+1, 256)
          StringAppend(String(0), "!", 256)
          RogMessage(String(0))
        else
          // Hit monster
          StringAppend(String(0), "You hit for ", 256)
          StringAppendNumber(String(0), damage, 256)
          StringAppend(String(0), " damage!", 256)
          RogMessage(String(0))
    else
      // Missed...
      if(defender == 0)
        StringAppend(String(0), "The ", 256)
        StringAppend(String(0), file+attacker+1, 256)
        StringAppend(String(0), " missed!", 256)
        RogMessage(String(0))
      else
        StringAppend(String(0), "You missed the ", 256)
        StringAppend(String(0), file+defdata+1, 256)
        StringAppend(String(0), "!", 256)
        RogMessage(String(0))



//-----------------------------------------------------------------------
int RogMoveCharacter(int chartomove, int xadd, int yadd, int special) 
  int self, x, y, index, tile, i, read, icon, collidechar
  int weapon, amount, oldtype, newtype


  self = FindSelf()
  if(chartomove < rog_numchar)
    index = 2250 + (chartomove*25)
    x = FileReadByte(file, index+9)
    y = FileReadByte(file, index+10)
    if(special == SPECIAL_WALK)
      if(xadd != 0 || yadd != 0)
        oldtype = FileReadByte(file, 1875+(y*25)+x)
        x = x+xadd
        y = y+yadd
        tile = FileReadByte(file, 1875+(y*25)+x)
        if(tile == '.' || tile == 140 || tile == '>')
          // Moved okay on map...  Check other chars...
          read = 2250
          collidechar = rog_numchar
          i = 0
          while(i < rog_numchar)
            if(i != chartomove)
              icon = FileReadByte(file, read)
              if(icon != ')' && icon != '[' && icon != '$' && icon != '%')
                if(x == FileReadByte(file, read+9) && y == FileReadByte(file, read+10))
                  // We have a collision...
                  collidechar = i
                  i = rog_numchar
            read = read + 25
            i++
          // Did we have a collision?
          if(collidechar < rog_numchar)
            // Yup...
            if(oldtype == '#')
              if(chartomove == 0)
                RogMessage("You are still buried...")
            else
              if(collidechar == 0 || chartomove == 0)
                RogAttack(chartomove, collidechar)
          else
            // Nope...  Move our character...
            if(oldtype == '#' && chartomove == 0)
              RogMessage("You dig yourself free!")
            FileWriteByte(file, index+9, x)
            FileWriteByte(file, index+10, y)
        else
          // Bumping a wall or something...
          // Try to go around if workin' on a diagonal...
          if(xadd != 0 && yadd != 0)
            RogMoveCharacter(chartomove, xadd, 0, SPECIAL_WALK) 
            RogMoveCharacter(chartomove, 0, yadd, SPECIAL_WALK) 
      else
        // Not moving
        if(chartomove == 0)
          RogMessage("Resting...")
          if(RollDice(1, 5) == 1)
            amount = FileReadByte(file, index+12)
            if(amount < FileReadByte(file, index+11))
              amount++
              FileWriteByte(file, index+12, amount)
    if(special == SPECIAL_USE)
      if(xadd != 0 || yadd != 0)
        x = x+xadd
        y = y+yadd
        tile = FileReadByte(file, 1875+(y*25)+x)
        if(tile == 139 || tile == 140)
          if(chartomove == 0)
            // Trying to open or close a door...  Make
            // sure it isn't blocked...
            read = 2250
            collidechar = rog_numchar
            i = 0
            while(i < rog_numchar)
              if(i != chartomove)
                icon = FileReadByte(file, read)
                if(icon != ')' && icon != '[' && icon != '$' && icon != '%')
                  if(x == FileReadByte(file, read+9) && y == FileReadByte(file, read+10))
                    // We have a collision...
                    collidechar = i
                    i = rog_numchar
              read = read + 25
              i++
            // Is it blocked?
            if(collidechar < rog_numchar)
              // Yup...
              RogMessage("The door is blocked...")
            else
              // Open/Close the door without trouble
              tile = 139+(tile&1)
              FileWriteByte(file, 1875+(y*25)+x, tile)
              if(chartomove == 0)
                if(tile == 139)
                  RogMessage("You close the door...")
                if(tile == 140)
                  RogMessage("You open the door...")
        if(tile == 'S')
          if(chartomove == 0)
            tile = 139
            FileWriteByte(file, 1875+(y*25)+x, tile)
            RogMessage("You found a secret door!")
        if(tile == '#')
          if(chartomove == 0)
            RogMessage("You find nothing...")
        if(tile == '.' || tile == '>')
          RogMoveCharacter(chartomove, xadd, yadd, SPECIAL_WALK) 
      else
        if(chartomove == 0)
          // Check for stairs...
          tile = FileReadByte(file, 1875+(y*25)+x)
          if(tile == '>')
            RogMessage("You descend the stairs...")
            RogGenerateMap(x, y)
          else
            // Check for items on the floor...
            read = 2250
            collidechar = rog_numchar
            i = 0
            while(i < rog_numchar)
              if(i != chartomove)
                icon = FileReadByte(file, read)
                if(icon == ')' || icon != '[' || icon != '$')
                  if(x == FileReadByte(file, read+9) && y == FileReadByte(file, read+10))
                    // We have a collision...
                    collidechar = i
                    if(icon == '$' || icon == '%')
                      // Get gold/food first...
                      i = rog_numchar
              read = read + 25
              i++
            if(collidechar < rog_numchar)
              // Found something to pick up...
              read = 2250+(collidechar*25)
              icon = FileReadByte(file, read)
              if(icon == ')')
                RogMessage("You exchange weapons...")
                oldtype = FileReadByte(file, index+16)
                newtype = FileReadByte(file, read+16)
                FileWriteByte(file, index+16, newtype)
                FileWriteByte(file, read+16, oldtype)
              if(icon == '[')
                RogMessage("You swap your armor...")
                oldtype = FileReadByte(file, index+17)
                newtype = FileReadByte(file, read+17)
                FileWriteByte(file, index+17, newtype)
                FileWriteByte(file, read+17, oldtype)
              if(icon == '$')
                amount = 5 + RollDice(1, 10) + (RollDice(1, 10)*rog_depth)
                StringClear(String(0))
                StringAppend(String(0), "You found ", 256)
                StringAppendNumber(String(0), amount, 256)
                StringAppend(String(0), " Gold...", 256)
                RogMessage(String(0))
                rog_gold = rog_gold+amount
                // Set hits to 0 so it poofs...
                FileWriteByte(file, read+12, 0)
              if(icon == '%')
                rog_food = rog_food+150
                if(rog_food > 500)
                  rog_food = 500
                if(rog_food > 300)
                  RogMessage("That Slime Mold filled")
                  RogMessage("your belly nicely...")
                else
                  RogMessage("That Slime Mold was")
                  RogMessage("yummy, but not enough...")
                // Set hits to 0 so it poofs...
                FileWriteByte(file, read+12, 0)
            else
              RogMessage("There's nothing to get...")
    if(special == SPECIAL_DIG)
      weapon = FileReadByte(file, index+16)
      if(weapon == WEAPON_MATTOCK)
        if(xadd != 0 || yadd != 0)
          x = x+xadd
          y = y+yadd
          tile = FileReadByte(file, 1875+(y*25)+x)
          if(tile == '.' || tile == 140 || tile == '>')
            RogMoveCharacter(chartomove, xadd, yadd, SPECIAL_WALK) 
          if(tile == 'S' || tile == 139)
            tile = '.'
            FileWriteByte(file, 1875+(y*25)+x, tile)
            if(chartomove == 0)
              RogMessage("You break down the door!")
          if(tile == '#')
            if(x > 0 && x < 24 && y > 0 && y < 14)
              if(RollDice(1,2) == 1)
                tile = '.'
                FileWriteByte(file, 1875+(y*25)+x, tile)
                if(chartomove == 0)
                  RogMessage("You break through!")
              else
                if(chartomove == 0)
                  RogMessage("You dig into the wall...")
            else
              if(chartomove == 0)
                RogMessage("This stone is too hard...")
        else
          if(chartomove == 0)
            if(SystemGet(SYS_KEYDOWN, KEYU, 0))
              // Trying to cause a cave in...
              tile = FileReadByte(file, 1875+(y*25)+x)
              if(tile == '#')
                // Already buried...
                RogDamageCharacter(0, 100, DAMAGE_WOUND)
                RogMessage("The level collapses!")
              else
                // Rocks fall on your head...
                RogDamageCharacter(0, 1, DAMAGE_WOUND)
                FileWriteByte(file, 1875+(y*25)+x, '#')
                RogMessage("You dig into the ceiling")
                RogMessage("and cause a cave-in!")
            else
              RogMessage("You pick your nose...")
      else
        RogMoveCharacter(chartomove, xadd, yadd, SPECIAL_WALK) 
        

//-----------------------------------------------------------------------
int RogUpdateGame(int force_update)
  int self, key, x, y, maxhits, hits, strength, dexterity
  int intelligence, weapon, armor, xadd, yadd, special
  int i, index, icon


  self = FindSelf()
  key = RogGetKey()
  if(force_update)
    key = KEYSPACE
  if(key)
    if(!force_update)
      // Move the player character
      xadd = 0
      yadd = 0
      if(key == KEYPAD1)
        xadd--
        yadd++
      if(key == KEYPAD2)
        yadd++
      if(key == KEYPAD3)
        xadd++
        yadd++
      if(key == KEYPAD4)
        xadd--
      if(key == KEYPAD6)
        xadd++
      if(key == KEYPAD7)
        xadd--
        yadd--
      if(key == KEYPAD8)
        yadd--
      if(key == KEYPAD9)
        xadd++
        yadd--
      special = SPECIAL_WALK
      if(SystemGet(SYS_KEYDOWN, KEYU, 0))
        special = SPECIAL_USE
      if(SystemGet(SYS_KEYDOWN, KEYD, 0))
        special = SPECIAL_DIG
      RogMoveCharacter(0, xadd, yadd, special)



      // Move all of the AI's
      x = FileReadByte(file, 2259)
      y = FileReadByte(file, 2260)
      i = 1
      index = 2275
      while(i < rog_numchar)
        hits = FileReadByte(file, index+12)
        if(hits)
          // Move the character...
          special = FileReadByte(file, index+19)
          if(special != SPECIAL_STILL)
            xadd = FileReadByte(file, index+9)
            yadd = FileReadByte(file, index+10)
            if(xadd == x)
              xadd = 0
            else
              if(xadd < x)
                xadd = 1
              else
                xadd = -1
            if(yadd == y)
              yadd = 0
            else
              if(yadd < y)
                yadd = 1
              else
                yadd = -1
            RogMoveCharacter(i, xadd, yadd, special)
          index = index+25
          i++
        else
          // Character should poof...  No need to increment...
          RogDestroyCharacter(i)


      // Decrease our food...  Starvation stuff...
      rog_moves++
      rog_food--
      if(rog_food == 100)
        RogMessage("You are getting hungry...")
      if(rog_food == 50)
        RogMessage("You are very hungry...")
      if(rog_food == 0)
        RogMessage("You are starving!")
        rog_food = 5
        RogDamageCharacter(0, 1, DAMAGE_WOUND)


      // Get rid of the opening message
      if(rog_moves < 5)
        RogMessage("")



    // Get the player's position and stuff
    x = FileReadByte(file, 2259)
    y = FileReadByte(file, 2260)
    maxhits = FileReadByte(file, 2261)
    hits = FileReadByte(file, 2262)
    strength = FileReadByte(file, 2263)
    dexterity = FileReadByte(file, 2264)
    intelligence = FileReadByte(file, 2265)
    weapon = FileReadByte(file, 2266)
    armor = FileReadByte(file, 2267)


    // Update the info on the left page
    RogDrawStats(maxhits, hits, strength, dexterity, intelligence, rog_level)
    RogDrawEquipment(weapon, armor, rog_gold)


    // Draw the map and stuff...
    RogClearDisplay(CLEAR_PARTIAL)
    if(weapon == 0)
      // Torch provides good light
      RogDrawDisplay(x, y, 10, 256)
    else
      // Others don't...
      RogDrawDisplay(x, y, 5, 256)
    RogDrawCharacters()



    // End the game if needed...
    if(hits == 0)
      RogEndGame()



//-----------------------------------------------------------------------
Refresh()
  int    self, i, count, lastpageturn, button


  // Close the window if we're done with it...
  self = FindSelf()
  if(icon0 == 255 || file == NULL)
    if(icon0 == 255)
      DebugMessage("WBOOK QUIT")
    if(file == NULL)
      DebugMessage("WBOOK NO FILE")
    ButtonSound()
    GoPoof(POOF_SELF)


  // Figure out how many pages are in the book...
  if(pages == 0)
    pages = SystemGet(SYS_FINDDATASIZE, 0, file) / 375
    if(pages == 0)
      GoPoof(POOF_SELF)
    if(file == "FILE:BKROGUE.DAT")
      if(pages > 4)
        pages = 4
      RogMessage("")
      RogMessage("")
      RogMessage("")
      RogMessage("")
      RogClearDisplay(CLEAR_RULES)




  // Do all of the Roguelike stuff here...
  if(file == "FILE:BKROGUE.DAT")
    if(pageturn == 32)
      SystemSet(SYS_BLOCKKEYBOARD, 0, 0, 5)
    if(rog_active)
      // Update the game
      RogUpdateGame(FALSE)
    else
      // Wait for the game to begin
      if(RogGetKey() == KEYSPACE)
        RogStartGame()
        RogUpdateGame(TRUE)




  // Title bar...  !!!BAD!!!  Do language!!!
  TitleFull(TRUE, -6.0, -8.0, "BOOK")


  // Book background...
  WindowMegaImage(-12.0,5.0,  8.0,3.0,  8.0,17.0,  -12.0,19.0,  0.01,0.0,  0.99,1.0,  WHITE, ALPHA_NONE, "FILE:=BOOKBG.RGB")
  WindowMegaImage(8.0,3.0,  28.0,5.0,  28.0,19.0,  8.0,17.0,  0.99,0.0,  0.01,1.0,  WHITE, ALPHA_NONE, "FILE:=BOOKBG.RGB")


  // Draw the bookmark closer...
  if(icon0)
    icon0 = WindowImage(20.00, 16.0, 3.0, 4.0, "FILE:=BOOKMK.RGB", "Close", icon0)
  else
    icon0 = WindowImage(20.00, 16.0, 3.0, 3.0, "FILE:=BOOKMK.RGB", NULL, 0)


  // Do stuff for the book and turning pages...
  lastpageturn = ((pages>>1)<<5)
  WindowBook(8.0, 4.0, 25, 15, pages, pageturn, file)
  button = WindowImage(8.0, 3.5, 19.5, 11.5, NULL, 0, 0)
  if(button == 255)
    if(pageturn < lastpageturn)
      flipdirection = 1
  button = WindowImage(-11.5, 3.5, 19.5, 11.5, NULL, 0, 0)
  if(button == 255)
    if(pageturn > 0)
      flipdirection = -1
  if(flipdirection != 0)
    count = SystemGet(SYS_MAINFRAMESKIP, 0, 0)
    i = 0
    while(i < count)
      pageturn = pageturn + flipdirection
      if((pageturn&31) == 0)
        flipdirection = 0
        i = count
      i++

  
//-----------------------------------------------------------------------
