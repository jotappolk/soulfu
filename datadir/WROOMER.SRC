// 00 Floor......
// 01 Exterior...
// 02 Exterior...
// 03 Exterior...
// 04 Wall Side..
// 05 Wall Cap...
// 06 Stair Side.
// 07 Floor2.....
// 08 Lawn.......
// 09 LawnBorder.
// 10 Cave.......
// 11 CaveBorder.
// 12 Wood.......
// 13 WoodBorder.
// 14 Whatever1..
// 15.Whatever2..
// 16 Fence......
// 17 Pavement...
// 18 DDD Tex 18.
// 19 DDD Tex 19.
// 20 DDD Tex 20.
// 21 DDD Tex 21.
// 22 DDD Tex 22.
// 23 DDD Tex 23.
// 24 DDD Tex 24.
// 25 DDD Tex 25.
// 26 DDD Tex 26.
// 27 DDD Tex 27.
// 28 Pit Floor..
// 29 Decal......
// 30 Water Side.
// 31 Water Cap..



#define button1      self.stat00l
#define button2      self.stat00h
#define button3      self.stat01l
#define button4      self.stat01h
#define button5      self.stat02l
#define button6      self.stat02h
#define button7      self.stat03l
#define button8      self.stat03h
#define button9      self.stat04l
#define buttonsave   self.stat04h
#define buttontest   self.stat05l
#define buttonpoof   self.stat05h
#define oldx         self.stat06w
#define oldy         self.stat07w
#define tarx         self.stat08w
#define tary         self.stat09w
#define tarz         self.stat10w
#define camspinx     self.stat11w
#define camspiny     self.stat12w
#define modelist     self.stat13w
#define zoom_slider  self.stat14l
#define top_view     self.stat14h
#define sub_mode     self.stat15l
#define border_mode  self.stat15h
#define move_mode    self.stat16l
#define old_select   self.stat16h
// stat17l is unused
#define test_active  self.stat17h
#define work_mode    self.stat18l
#define trim_mode    self.stat18h
#define floortex     self.stat19l
#define stair_size   self.stat19h
#define stair_fix    self.stat20l
#define ledge_height self.stat20h
#define ledge_base   self.stat21l
#define ledge_rand   self.stat21h
#define openfile     self.int2223
#define randlist     self.int2425
#define teamlist     self.xtra00w
#define typelist     self.xtra01w
#define decaltype    self.xtra02w
#define water_type   self.xtra03w
#define filename     self.string0

#define MOVE_MODE_BRIDGE 3

#define MODE_VERTEX        0
#define MODE_TRIANGLE      1
#define MODE_TEXTURE       2
#define MODE_EXTERIOR_WALL 3
#define MODE_DOORS         4
#define MODE_WAYPOINT      5
#define MODE_OBJECT_GROUP  6
#define MODE_BRIDGE        7
#define MODE_HARD_PLOPPER  8
#define MODE_ROOM_INFO     9

#define SUB_MODE_NONE       0
#define SUB_MODE_CROSS      1
#define SUB_MODE_DUAL_CROSS 2

#define WORK_MODE_VERTEX   0
#define WORK_MODE_WAYPOINT 1
#define WORK_MODE_BRIDGE   2
#define WORK_MODE_OBJECT   3

#define TRIM_MODE_NONE       0
#define TRIM_MODE_LENGTH     1
#define TRIM_MODE_WALL_TOP   2
#define TRIM_MODE_FLOOR_EDGE 3
#define TRIM_MODE_WALL_OTHER 4

#define FENCE_SIZE 44

#define GRID_COLOR  7557442

#define KEY2      90
#define KEY3      91
#define KEYDOWN   81
#define KEY4      92
#define KEYLEFT   80
#define KEY6      94
#define KEYRIGHT  79
#define KEY8      96
#define KEY9      97
#define KEYMINUS  86
#define KEYPLUS   87
#define KEYUP     82
#define KEYSPACE  44
#define KEYBRACK  47
#define KEYDELETE 76
#define KEYA      4
#define KEYC      6
#define KEYI      12
#define KEYN      17
#define KEYV      25
#define KEYW      26
#define KEYRSHIFT 229
#define KEYLSHIFT 225

#define SELECT_ALL        0
#define SELECT_INVERT     3
#define SELECT_CONNECTED  4

#define ROOM_TEXTURE_FLAG_NOLINE     1
#define ROOM_TEXTURE_FLAG_NOHEIGHT   2
#define ROOM_TEXTURE_FLAG_FLOORTEX   4
#define ROOM_TEXTURE_FLAG_NODRAW     8
#define ROOM_TEXTURE_FLAG_ALPHATRANS 16
#define ROOM_TEXTURE_FLAG_NOSHADOW   32
#define ROOM_TEXTURE_FLAG_PAPERDOLL  64
#define ROOM_TEXTURE_FLAG_SMOOTH     128

#define HARDPLOPPER_FENCE       0
#define HARDPLOPPER_STAIR       1
#define HARDPLOPPER_LEDGE       2
#define HARDPLOPPER_LEDGE_LOOP  3
#define HARDPLOPPER_DECAL       4
#define HARDPLOPPER_PAVEMENT    5
#define HARDPLOPPER_BORDER      6
#define HARDPLOPPER_MINE        7

#define xFFFFFF00 4294967040
#define xFFFF00FF 4294902015
#define xFF00FFFF 4278255615
#define x00FFFFFF 16777215

#define ROOM_WALL_FLAG_LOW_NORMAL_WALL   0
#define ROOM_WALL_FLAG_LOW_NO_TRIM_WALL  1
#define ROOM_WALL_FLAG_LOW_NO_WALL       2
#define ROOM_WALL_FLAG_LOW_DOOR          3
#define ROOM_WALL_FLAG_LOW_SHUTTER       4
#define ROOM_WALL_FLAG_LOW_PASSAGE       5
#define ROOM_WALL_FLAG_LOW_BOSS_DOOR     6
#define ROOM_WALL_FLAG_LOW_CRACKED_DOOR  7
#define ROOM_WALL_FLAG_LOW_SECRET_DOOR   8



//-----------------------------------------------------------------------
ClearButtons()
  int self
  self = FindSelf()
  button1 = 0
  button2 = 0
  button3 = 0
  button4 = 0
  button5 = 0
  button6 = 0
  button7 = 0
  button8 = 0
  button9 = 0

  buttonsave = 0
  buttontest = 0
  buttonpoof = 0

//-----------------------------------------------------------------------
// Keeps a button held down...
int StickyButton(int value)
  if(value == 255)
    ButtonSound()
    ClearButtons()
  if(value == 250)
    value = 251
  return value

//-----------------------------------------------------------------------
AutoTexture()
  int self
  self = FindSelf()
  if(openfile)
    SystemSet(SYS_ROOMAUTOTEXTURE, openfile, 0, 0)

//-----------------------------------------------------------------------
int DDDTextureButtons(int tex, int value, float y)
  StringClear(String(0))
  StringAppend(String(0), "Tex ", 256)
  StringAppendNumber(String(0), tex, 256)
  StringAppend(String(0), " = ", 256)
  StringAppendNumber(String(0), value+16, 256)

  CenterString(WHITE, 7.0, y, String(0))
  if(ButtonImage(0, 0.0, y,  2.0, 1.0, "<") == 255)
    value--
  if(ButtonImage(0,12.0, y,  2.0, 1.0, ">") == 255)
    value++
  value = value&15
  return value

//-----------------------------------------------------------------------
Spawn()
  int self
  self = FindSelf()
  ITEMREG.Setup()
  floortex = 0
  oldx = 65000
  oldy = 65000
  tarx = 32768
  tary = 32768
  tarz = 32768
  camspinx = 33000
  camspiny = 54000
  modelist = 0
  teamlist = 0
  typelist = 0
  top_view = FALSE
  openfile = NULL
  zoom_slider = 64
  sub_mode = SUB_MODE_NONE
  work_mode = WORK_MODE_VERTEX
  border_mode = FALSE
  move_mode = MOVE_MODE_MOVE
  old_select = 0
  trim_mode = TRIM_MODE_NONE
  test_active = FALSE
  stair_size = 64
  stair_fix = TRUE
  ledge_height = 64
  ledge_base = TRUE
  ledge_rand = FALSE
  decaltype = 0
  randlist = 0
  StringClear(filename)
  StringAppend(filename, "FILE:ROMSCRAP.DAT", 14)
  ClearButtons()
  SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

//-----------------------------------------------------------------------
int WriteTextureName(int texture, int name)
  int self, tex_offset, i, value


  self = FindSelf()
  tex_offset = (FileReadByte(openfile, 56)<<24) | (FileReadByte(openfile, 57)<<16) | (FileReadByte(openfile, 58)<<8) | FileReadByte(openfile, 59)
  tex_offset = tex_offset + 32 + (texture<<3)
  i = 0
  while(i < 8)
    FileWriteByte(openfile, tex_offset+i, 0)
    i++
  i = 0
  while(i < 8)
    value = StringGetValue(name, i)
    if(value)
      FileWriteByte(openfile, tex_offset+i, value)
    else
      i = 8
    i++

//-----------------------------------------------------------------------
Refresh()
  int    i, self, child, mode, input_return
  int    curx, cury, temp, percent, facing
  int    object, group, object_data, subtype
  int    room_flags, water_level, tex_offset
  float  cx, cy, cz, tx, ty, tz, zoom, velx, vely, velz
  float  sine, cosine, screenx, frustumx, frustumy

  // Allow us to save data in the window's properties...
  self = FindSelf()
  screenx = SystemGet(SYS_SCREENPARAMS, 0, 2)
  frustumx = SystemGet(SYS_SCREENPARAMS, 0, 2) / 1000.0
  frustumy = SystemGet(SYS_SCREENPARAMS, 0, 3) / 1000.0

  // Make sure we've got the file open'd...
  if(openfile == NULL)
    // No file open yet...  Try to open it...
    if(CheckExtension(filename, "SRF"))
      // Extension looks good...
      openfile = FileOpen(filename, FILE_NORMAL)
      if(openfile)
        // Filename was valid...  Remember it for later...
        StringClear("FILE:ROMSCRAP.DAT")
        StringAppend("FILE:ROMSCRAP.DAT", filename, 16)

        // Setup our textures too...
        MAPGEN.TextureSet(openfile, 0, TRUE)

        // Clear our stuff...
        SystemSet(SYS_ROOMGROUP, openfile, 0, 0)
        SystemSet(SYS_ROOMOBJECT, openfile, 0, 0)
      else
        // Filename was invalid...  Time to quit...
        GoPoof(POOF_SELF)
    else
      // Extension was invalid...  Time to quit...
      GoPoof(POOF_SELF)



  // Room test mode...
  if(test_active)
    if(buttontest == 250)
      ButtonSound()
      ClearButtons()
      GoPoof(POOF_ALL_OTHER_WINDOWS)
      Spawn(WINDOW, screenx / 2, 150.0, 1.0, "FILE:WTOOLS.RUN")
      SystemSet(SYS_LEAVEGAME, 0, 0, 0)
      SystemSet(SYS_TOPWINDOW, 0, 0, 0)
      test_active = FALSE
      StopMusic()
    TitleBar(TRUE, 0.0, -13.0, "Testing")
    WindowBorder(FALSE, -5.0, -13.0, 10,  2, BORDER_FULL)
    buttontest = ButtonImage(buttontest, 0.0, 0.0, 10.0, 2.0, "Untest")
    return TRUE
  StringClear(DEBUG_STRING)



  // Standard button actions
  if(buttontest == 250)
    // Test room just pressed...
    buttontest = 0
    ButtonSound()
    GoPoof(POOF_ALL_PARTICLES)
    GoPoof(POOF_ALL_CHARACTERS)
    MAPGEN.Setup()  // Needed to setup items & stuff...
    GoPoof(POOF_ALL_PARTICLES)
    GoPoof(POOF_ALL_CHARACTERS)
    LogMessage("TEST UNCOMPRESS START")
    SystemSet(SYS_ROOMUNCOMPRESS, openfile, "FILE:WALLSET0.DDD", -1)
    MAPGEN.TextureSet(openfile, 0, FALSE)
    LogMessage("TEST UNCOMPRESS END")
    SystemSet(SYS_JOINGAME, 255, 255, 255)


    SystemSet(SYS_GLOBALSPAWN, 0, GLOBAL_SPAWN_TEAM, TEAM_GOOD)
    SystemSet(SYS_GLOBALSPAWN, 0, GLOBAL_SPAWN_SUBTYPE, RollDice(1, 256))
    SystemSet(SYS_GLOBALSPAWN, 0, GLOBAL_SPAWN_CLASS, RollDice(1, 8)-1)
    child = Spawn(CHARACTER, 0.0, 0.0, 0.0, "FILE:CPLAYER.RUN")
    if(child)
      child.eqcol23 = RollDice(1, 256)
      temp = FindIndex(child)
      SystemSet(SYS_CHARFASTFUNCTION, temp, 0, FAST_FUNCTION_MODELSETUP)
      StringClear(child.name)
      StringAppend(child.name, "Test", 16)

      SystemSet(SYS_STARTGAME, 0, 0, 0)
      GoPoof(POOF_ALL_OTHER_WINDOWS)
      test_active = TRUE

      // Setup player control and give us a status window...
      i = 0
      while(i < 4)
        if(SystemGet(SYS_PLAYERDEVICE, i, PLAYER_DEVICE_TYPE) > PLAYER_DEVICE_NONE)
          SystemSet(SYS_LOCALPLAYER, i, 0, temp)
          Spawn(WINDOW, 80.0, 260.0, i, "FILE:WSTATUS.RUN")
          i = 5
        i++
    return 0
  if(buttonsave == 250)
    ButtonSound()
    AutoTexture()
    FileOpen(filename, FILE_EXPORT)
    UpdateFiles(UPDATE_SDFSAVE)
    UpdateFiles(UPDATE_END)
    LANGUAGE.Setup()
  if(buttonpoof == 250)
    ButtonSound()
    GoPoof(POOF_SELF)



  // Title bar
  StringClear(String(0))
  StringAppend(String(0), "Room Edit:", 256)
  StringAppend(String(0), filename, 256)
  TitleBar(TRUE, 0.0, -13.0, String(0))


  // Bottom bar
  WindowBorder(FALSE, -18.5, 12.75, 37,  2, BORDER_LOW_TITLE)
  WindowString(WHITE, 0.0,  0.2, "Name:")
  input_return = WindowInput(5.0, 0.2, 32, openfile, 1)
  top_view = WindowYesBox(top_view, 0.0, 1.2)
  WindowString(WHITE, 1.0, 1.2, "TopView")
  StringClear(NAME_STRING)
  if(sub_mode == 1)
    SystemSet(SYS_ROOMPLOPATSTRING, 0, 0, 0)
  else
    if(SystemGet(SYS_ROOMSELECT, 0, 0))
      StringAppendNumber(NAME_STRING, SystemGet(SYS_ROOMSELECT, 0, 0), 256)
      StringAppend(NAME_STRING, " Selected", 256)
  WindowString(WHITE, 9.0, 1.2, NAME_STRING)
  StringClear(NAME_STRING)
    


  // Save/Exit area
  WindowBorder(FALSE, -20.0, 8.0, 14,  4, BORDER_BOX)
  buttonsave = ButtonImage(buttonsave, 0.0, 0.0, 9.0, 2.0, "SDF Save")
  buttontest = ButtonImage(buttontest, 9.0, 0.0, 5.0, 2.0, "Test")
  buttonpoof = ButtonImage(buttonpoof, 0.0, 2.0, 14.0, 2.0,  "GoPoof")






  // Mode selection & tools...
  WindowBorder(FALSE, -20.0, -13.0, 14,  20, BORDER_FULL)
  mode = modelist>>8
  // Buttons depend on operation mode...
  if(mode == MODE_VERTEX)
    work_mode = WORK_MODE_VERTEX
    if(SystemGet(SYS_KEYPRESSED, KEYSPACE, 0))
      button1 = 255
    if(button2 < 140)
      if(SystemGet(SYS_KEYPRESSED, KEYA, 0))
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, TRUE)
      if(SystemGet(SYS_KEYPRESSED, KEYC, 0))
        SystemSet(SYS_ROOMCOPYPASTE, openfile, 0, FALSE)
      if(SystemGet(SYS_KEYPRESSED, KEYV, 0))
        SystemSet(SYS_ROOMCOPYPASTE, openfile, 0, TRUE)
      if(SystemGet(SYS_KEYPRESSED, KEYI, 0))
        SystemSet(SYS_ROOMSELECT, SELECT_INVERT, 0, FALSE)
      if(SystemGet(SYS_KEYPRESSED, KEYN, 0))
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      if(SystemGet(SYS_KEYPRESSED, KEYW, 0))
        SystemSet(SYS_ROOMWELDVERTICES, openfile, 0, 0)
      if(SystemGet(SYS_KEYPRESSED, KEYBRACK, 0))
        SystemSet(SYS_ROOMSELECT, SELECT_CONNECTED, 0, FALSE)
      if(SystemGet(SYS_KEYPRESSED, KEYDELETE, 0))
        SystemSet(SYS_ROOMDELETEVERTEX, openfile, 0, 0)
    StringAppend(DEBUG_STRING, "A=All,W=Weld,C=Copy,V=Paste,Space=Plop", 256)


    if(button1 == 250)
      if(sub_mode == 1)
        // Add a vertex...
        SystemSet(SYS_ROOMPLOPVERTEX, openfile, 0, FALSE)
      else
        sub_mode = 1
        border_mode = BORDER_CROSS_HAIRS
      ButtonSound()
      ClearButtons()
    if(button2 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button2 > 140)
      SystemSet(SYS_ROOMDELETEVERTEX, openfile, 0, 0)
    if(button3 == 255)
      sub_mode = 0
      border_mode = BORDER_SELECT
    if(button4 == 255)
      sub_mode = 2
      border_mode = BORDER_MOVE
      move_mode = MOVE_MODE_MOVE
    if(button5 == 255)
      sub_mode = 2
      border_mode = BORDER_MOVE
      move_mode = MOVE_MODE_ROTATE
    if(button6 == 255)
      sub_mode = 2
      border_mode = BORDER_MOVE
      move_mode = MOVE_MODE_SCALE



    button1 = ButtonImage(button1, 0.0, 2.0, 14.0, 2.0, "Plop")
    button2 = StickyButton(ButtonImage(button2, 0.0, 4.0, 14.0, 2.0, "Delete"))
    button3 = StickyButton(ButtonImage(button3, 0.0, 6.0, 14.0, 2.0, "Select"))
    button4 = StickyButton(ButtonImage(button4, 0.0, 8.0, 14.0, 2.0, "Move"))
    button5 = StickyButton(ButtonImage(button5, 0.0,10.0, 14.0, 2.0, "Rotate"))
    button6 = StickyButton(ButtonImage(button6, 0.0,12.0, 14.0, 2.0, "Scale"))
  if(mode == MODE_TRIANGLE)
    work_mode = WORK_MODE_VERTEX
    if(button1 == 250)
      ButtonSound()
      floortex = (floortex-1)&31
    if(button2 == 250)
      ButtonSound()
      floortex = (floortex+1)&31
    if(button3 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button3 > 140)
      SystemSet(SYS_ROOMPLOPTRIANGLE, openfile, floortex, 0)
    if(button4 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button4 > 140)
      SystemSet(SYS_ROOMDELETETRIANGLE, openfile, floortex, 0)
    if(button5 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    StringClear(DEBUG_STRING)
    if(button5 > 140)
      SystemSet(SYS_ROOMPLOPFAN, openfile, floortex, 0)
      if(SystemGet(SYS_KEYPRESSED, KEYN, 0))
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      StringAppend(DEBUG_STRING, "N=Select None", 256)


    // Autotrim...
    if(button6 == 255)
      trim_mode = TRIM_MODE_LENGTH
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      LocalMessage("AutoTrim", "AutoTrim is used to texture walls and floor border near walls.")
      LocalMessage("AutoTrim", "If you are texturing a platform, pick vertices to show the wall's length...")
    if(button7 == 255)
      if(trim_mode == TRIM_MODE_LENGTH)
        SystemSet(SYS_ROOMAUTOTRIM, openfile, 0, trim_mode)    // 1 is the code to calculate the scaling based on wall length vertices...
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        trim_mode = TRIM_MODE_WALL_TOP
        LocalMessage("AutoTrim", "Now pick 2 vertices along the top of the wall to mark the current segment we're working on...")
      else
        sub_mode = 0
        border_mode = FALSE
        move_mode = 0
        ClearButtons()
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        trim_mode = TRIM_MODE_NONE
        BuzzerSound()
    if(button8 == 255)
      if(trim_mode == TRIM_MODE_WALL_TOP)
        SystemSet(SYS_ROOMAUTOTRIM, openfile, 0, trim_mode)    // 2, 3 and 4 are codes to set autotrim markers
        trim_mode = TRIM_MODE_FLOOR_EDGE
        LocalMessage("AutoTrim", "Now's the time to pick points in the floor border, usually 2 points that correspond to the top of the wall segment...")
      else
        sub_mode = 0
        border_mode = FALSE
        move_mode = 0
        ClearButtons()
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        trim_mode = TRIM_MODE_NONE
        BuzzerSound()
    if(button9 == 255)
      if(trim_mode == TRIM_MODE_FLOOR_EDGE)
        SystemSet(SYS_ROOMAUTOTRIM, openfile, 0, trim_mode)    // 2, 3 and 4 are codes to set autotrim markers
        trim_mode = TRIM_MODE_WALL_OTHER
        LocalMessage("AutoTrim", "Now pick any other wall points in this segment, usually 2 at the base of the wall...")
      else
        sub_mode = 0
        border_mode = FALSE
        move_mode = 0
        ClearButtons()
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        trim_mode = TRIM_MODE_NONE
        BuzzerSound()




    button1 = ButtonImage(button1, 0.0, 3.0,  2.0, 1.0, "<")
    button2 = ButtonImage(button2,12.0, 3.0,  2.0, 1.0, ">")
    StringClear(String(0))
    StringAppend(String(0), "FILE:WROOMER.SRC" + ((floortex&31)*18) + 3, 256)
    While(StringGetValue(String(0), StringLength(String(0))-1) == 46)
      StringChopRight(String(0), 1)
    WindowString(WHITE, 0.0, 2.0, String(0))

    StringClear(String(0))
    tex_offset = (FileReadByte(openfile, 56)<<24) | (FileReadByte(openfile, 57)<<16) | (FileReadByte(openfile, 58)<<8) | FileReadByte(openfile, 59)
    tex_offset = tex_offset + 32 + (floortex<<3)
    StringAppend(String(0), openfile+tex_offset, 9)
    StringUppercase(String(0))
    input_return = WindowInput(2.5, 3.0, 9, String(0), 1)
    WriteTextureName(floortex, String(0))
    if(input_return == 255)
      // Setup our textures too...
      MAPGEN.TextureSet(openfile, 0, TRUE)

    button3 = StickyButton(ButtonImage(button3, 0.0, 4.0, 14.0, 2.0, "Plop"))
    button4 = StickyButton(ButtonImage(button4, 0.0, 6.0, 14.0, 2.0, "Delete"))
    button5 = StickyButton(ButtonImage(button5, 0.0, 8.0, 14.0, 2.0, "Plop Fan"))
    button6 = StickyButton(ButtonImage(button6, 0.0,10.0, 14.0, 2.0, "1 Length    "))
    button7 = StickyButton(ButtonImage(button7, 0.0,12.0, 14.0, 2.0, "2 Wall Top  "))
    button8 = StickyButton(ButtonImage(button8, 0.0,14.0, 14.0, 2.0, "3 Floor Edge"))
    button9 = StickyButton(ButtonImage(button9, 0.0,16.0, 14.0, 2.0, "4 Wall Other"))

    if(ButtonImage(0, 0.0, 18.0,  14.0, 2.0, "5 Autotrim  ") == 255)
      if(trim_mode == TRIM_MODE_WALL_OTHER)
        SystemSet(SYS_ROOMAUTOTRIM, openfile, 0, trim_mode)    // 2, 3 and 4 are codes to set autotrim markers
        SystemSet(SYS_ROOMAUTOTRIM, openfile, 0, 5)            // 5 is code to do autotrim...
        sub_mode = 0
        border_mode = BORDER_POINT_PICK
        move_mode = 0
        ClearButtons()
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        button7 = 254
        trim_mode = TRIM_MODE_WALL_TOP
        LocalMessage("AutoTrim", "Move on to the next segment...")
      else
        BuzzerSound()
        sub_mode = 0
        border_mode = FALSE
        move_mode = 0
        ClearButtons()
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
        trim_mode = TRIM_MODE_NONE




  if(mode == MODE_TEXTURE)
    if(button1 == 250)
      ButtonSound()
      floortex = (floortex-1)&31
    if(button2 == 250)
      ButtonSound()
      floortex = (floortex+1)&31
    if(button3 == 250)
      ButtonSound()
      // Set all flags to default values...
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 0, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 1, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_NOHEIGHT | ROOM_TEXTURE_FLAG_NOSHADOW)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 2, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_NOHEIGHT | ROOM_TEXTURE_FLAG_NOSHADOW)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 3, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_NOHEIGHT | ROOM_TEXTURE_FLAG_NOSHADOW)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 4, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 5, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 6, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 7, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 8, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, 9, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_ALPHATRANS)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,10, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,11, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_ALPHATRANS)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,12, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,13, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_ALPHATRANS)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,14, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,15, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,16, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,17, ROOM_TEXTURE_FLAG_NOLINE)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,18, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,19, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,20, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,21, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,22, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,23, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,24, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,25, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,26, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,27, 0)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,28, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX | ROOM_TEXTURE_FLAG_NODRAW)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,29, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_FLOORTEX | ROOM_TEXTURE_FLAG_ALPHATRANS)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,30, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_NOHEIGHT)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,31, ROOM_TEXTURE_FLAG_NOLINE | ROOM_TEXTURE_FLAG_NOHEIGHT | ROOM_TEXTURE_FLAG_FLOORTEX)
      // Set all texture names to default values
      WriteTextureName( 0, "MPFL10A") // "FLOOR")
      WriteTextureName( 1, "MPWL04A") // "WALL")
      WriteTextureName( 2, "MPCP04A") // "WALLCAP")
      WriteTextureName( 3, "MPWL04A") // "WALL")
      WriteTextureName( 4, "MPWL04A") // "WALL")
      WriteTextureName( 5, "MPCP04A") // "WALLCAP")
      WriteTextureName( 6, "MPWL04A") // "WALL")
      WriteTextureName( 7, "FLOOR2")
      WriteTextureName( 8, "LAWN")
      WriteTextureName( 9, "LAWNBR")
      WriteTextureName(10, "CAVE")
      WriteTextureName(11, "CAVEBR")
      WriteTextureName(12, "WOOD")
      WriteTextureName(13, "WOODBR")
      WriteTextureName(14, "")
      WriteTextureName(15, "")
      WriteTextureName(16, "FENCE")
      WriteTextureName(17, "PAVE")
      WriteTextureName(18, "")
      WriteTextureName(19, "")
      WriteTextureName(20, "")
      WriteTextureName(21, "")
      WriteTextureName(22, "")
      WriteTextureName(23, "")
      WriteTextureName(24, "")
      WriteTextureName(25, "")
      WriteTextureName(26, "")
      WriteTextureName(27, "")
      WriteTextureName(28, "FLOOR")
      WriteTextureName(29, "DECAL")
      WriteTextureName(30, "WATER")
      WriteTextureName(31, "WATER")
      MAPGEN.TextureSet(openfile, 0, TRUE)
    if(button4 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,18, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,19, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,20, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,21, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,22, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,23, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,24, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,25, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,26, ROOM_TEXTURE_FLAG_SMOOTH)
      SystemSet(SYS_ROOMTEXTUREFLAGS, openfile,27, ROOM_TEXTURE_FLAG_SMOOTH)



    button1 = ButtonImage(button1, 0.0, 3.0,  2.0, 1.0, "<")
    button2 = ButtonImage(button2,12.0, 3.0,  2.0, 1.0, ">")
    button3 = ButtonImage(button3, 0.0,14.0, 14.0, 2.0, "Defaults")
    button4 = ButtonImage(button4, 0.0,16.0, 14.0, 2.0, "Smooth DDD")
    StringClear(String(0))
    StringAppend(String(0), "FILE:WROOMER.SRC" + ((floortex&31)*18) + 3, 256)
    While(StringGetValue(String(0), StringLength(String(0))-1) == 46)
      StringChopRight(String(0), 1)
    WindowString(WHITE, 0.0, 2.0, String(0))


    StringClear(String(0))
    tex_offset = (FileReadByte(openfile, 56)<<24) | (FileReadByte(openfile, 57)<<16) | (FileReadByte(openfile, 58)<<8) | FileReadByte(openfile, 59)
    tex_offset = tex_offset + 32 + (floortex<<3)
    StringAppend(String(0), openfile+tex_offset, 9)
    StringUppercase(String(0))
    input_return = WindowInput(2.5, 3.0, 9, String(0), 1)
    WriteTextureName(floortex, String(0))
    if(input_return == 255)
      // Setup our textures too...
      MAPGEN.TextureSet(openfile, 0, TRUE)


    // Flags...
    temp = SystemGet(SYS_ROOMTEXTUREFLAGS, openfile, floortex)

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_NOLINE, 0.0, 4.0)*ROOM_TEXTURE_FLAG_NOLINE) | (temp & (255-ROOM_TEXTURE_FLAG_NOLINE))
    WindowString(WHITE, 1.0, 4.0, "No Line")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_NOHEIGHT, 0.0, 5.0)*ROOM_TEXTURE_FLAG_NOHEIGHT) | (temp & (255-ROOM_TEXTURE_FLAG_NOHEIGHT))
    WindowString(WHITE, 1.0, 5.0, "No Height")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_FLOORTEX, 0.0, 6.0)*ROOM_TEXTURE_FLAG_FLOORTEX) | (temp & (255-ROOM_TEXTURE_FLAG_FLOORTEX))
    WindowString(WHITE, 1.0, 6.0, "Floor Texture")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_NODRAW, 0.0, 7.0)*ROOM_TEXTURE_FLAG_NODRAW) | (temp & (255-ROOM_TEXTURE_FLAG_NODRAW))
    WindowString(WHITE, 1.0, 7.0, "Don't Draw")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_ALPHATRANS, 0.0, 8.0)*ROOM_TEXTURE_FLAG_ALPHATRANS) | (temp & (255-ROOM_TEXTURE_FLAG_ALPHATRANS))
    WindowString(WHITE, 1.0, 8.0, "Alpha Trans")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_NOSHADOW, 0.0, 9.0)*ROOM_TEXTURE_FLAG_NOSHADOW) | (temp & (255-ROOM_TEXTURE_FLAG_NOSHADOW))
    WindowString(WHITE, 1.0, 9.0, "No Shadow")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_PAPERDOLL, 0.0,10.0)*ROOM_TEXTURE_FLAG_PAPERDOLL) | (temp & (255-ROOM_TEXTURE_FLAG_PAPERDOLL))
    WindowString(WHITE, 1.0,10.0, "Paper Doll")

    temp = (WindowYesBox(temp&ROOM_TEXTURE_FLAG_SMOOTH, 0.0,11.0)*ROOM_TEXTURE_FLAG_SMOOTH) | (temp & (255-ROOM_TEXTURE_FLAG_SMOOTH))
    WindowString(WHITE, 1.0,11.0, "Smooth")

    SystemSet(SYS_ROOMTEXTUREFLAGS, openfile, floortex, temp)



  if(mode == MODE_EXTERIOR_WALL)
    work_mode = WORK_MODE_VERTEX
    if(button1 == 250)
      ButtonSound()
      sub_mode = 0
      border_mode = 0
      SystemSet(SYS_ROOMCLEAREXTERIORWALL, openfile, 0, 0)
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      ClearButtons()
    if(button2 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      old_select = 0
    if(button2 > 140)
      if((SystemGet(SYS_ROOMSELECT, 0, 0)&255) != old_select)
        old_select = SystemGet(SYS_ROOMSELECT, 0, 0)
        SystemSet(SYS_ROOMPLOPEXTERIORWALL, openfile, 0, 0)


    button1 = ButtonImage(button1, 0.0, 2.0, 14.0, 2.0, "Clear Chain")
    button2 = StickyButton(ButtonImage(button2, 0.0, 4.0, 14.0, 2.0, "Pick Chain"))

    // Minimap window...
    WindowBorder(FALSE, -19.0, -6.0, 12,  12, BORDER_BOX)
    Window3DStart(0.0, 0.0, 12.0, 12.0, FALSE)
    Window3DPosition(0.0, 0.0, 0.0, WIN_TARGET)
    Window3DPosition(0.0, 0.1, 160.0, WIN_CAMERA)
    Window3DPosition(0.4, 0.4, 500.0, WIN_FRUSTUM)
    Window3DRoom(0.0, 0.0, 0.0, openfile, DARK_RED, 0, ROOM_MODE_MINIMAP)
    Window3DPosition(frustumx, frustumy, 500.0, WIN_FRUSTUM)
    Window3DEnd()
    WindowBorder(FALSE, -20.0, -13.0, 0,  0, BORDER_NONE)  // Return to previous window area...


  if(mode == MODE_DOORS)
    work_mode = WORK_MODE_VERTEX
    if(button1 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button1 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_NORMAL_WALL
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

    if(button2 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button2 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_NO_TRIM_WALL
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

    if(button3 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button3 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_NO_WALL
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

    if(button4 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button4 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_DOOR
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

    if(button5 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button5 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_SHUTTER
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)

    if(button6 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button6 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_PASSAGE
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)


    if(button7 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button7 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_BOSS_DOOR
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)


    if(button8 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button8 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_CRACKED_DOOR
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)


    if(button9 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button9 > 140)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        temp = SystemGet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0)
        temp = (temp&240) | ROOM_WALL_FLAG_LOW_SECRET_DOOR
        SystemSet(SYS_ROOMEXTERIORWALLFLAGS, openfile, 0, temp)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)



    button1 = StickyButton(ButtonImage(button1, 0.0, 2.0, 14.0, 2.0, "Normal Wall"))
    button2 = StickyButton(ButtonImage(button2, 0.0, 4.0, 14.0, 2.0, "No Trim Wall"))
    button3 = StickyButton(ButtonImage(button3, 0.0, 6.0, 14.0, 2.0, "No Wall"))
    button4 = StickyButton(ButtonImage(button4, 0.0, 8.0, 14.0, 2.0, "Door"))
    button5 = StickyButton(ButtonImage(button5, 0.0,10.0, 14.0, 2.0, "Shutter"))
    button6 = StickyButton(ButtonImage(button6, 0.0,12.0, 14.0, 2.0, "Passage"))
    button7 = StickyButton(ButtonImage(button7, 0.0,14.0, 14.0, 2.0, "Boss Door"))
    button8 = StickyButton(ButtonImage(button8, 0.0,16.0, 14.0, 2.0, "Cracked Door"))
    button9 = StickyButton(ButtonImage(button9, 0.0,18.0, 14.0, 2.0, "Secret Door"))



  if(mode == MODE_WAYPOINT)
    work_mode = WORK_MODE_WAYPOINT
    if(SystemGet(SYS_KEYPRESSED, KEYSPACE, 0))
      button1 = 255


    if(button1 == 250)
      if(sub_mode == 1)
        // Add a waypoint...
        SystemSet(SYS_ROOMPLOPWAYPOINT, openfile, 0, 0)
      else
        sub_mode = 1
        border_mode = BORDER_CROSS_HAIRS
      ButtonSound()
      ClearButtons()
    if(button2 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button2 > 140)
      SystemSet(SYS_ROOMDELETEWAYPOINT, openfile, 0, 0)
    if(button3 > 140)
      move_mode = MOVE_MODE_MOVE
      sub_mode = 0
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 0)
        border_mode = BORDER_MOVE
      else
        border_mode = BORDER_POINT_PICK
      if(SystemGet(SYS_CURSORBUTTONDOWN, 0, 0) == FALSE)
        border_mode = BORDER_POINT_PICK
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button4 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button4 > 140)
      SystemSet(SYS_ROOMLINKWAYPOINT, openfile, 0, 0)
    if(button5 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button5 > 140)
      SystemSet(SYS_ROOMUNLINKWAYPOINT, openfile, 0, 0)





    button1 = ButtonImage(button1, 0.0, 2.0, 14.0, 2.0, "Plop")
    button2 = StickyButton(ButtonImage(button2, 0.0, 4.0, 14.0, 2.0, "Delete"))
    button3 = StickyButton(ButtonImage(button3, 0.0, 6.0, 14.0, 2.0, "Pick & Move"))
    button4 = StickyButton(ButtonImage(button4, 0.0, 8.0, 14.0, 2.0, "Link"))
    button5 = StickyButton(ButtonImage(button5, 0.0,10.0, 14.0, 2.0, "Unlink"))








  if(mode == MODE_OBJECT_GROUP)
    work_mode = WORK_MODE_OBJECT

    if(SystemGet(SYS_KEYPRESSED, KEYDELETE, 0))
      button8 = 255


    // Always in pick and move mode...
    move_mode = MOVE_MODE_MOVE
    sub_mode = 0
    if(SystemGet(SYS_ROOMSELECT, 0, 0) > 0)
      border_mode = BORDER_MOVE
    else
      border_mode = BORDER_POINT_PICK
    if(SystemGet(SYS_CURSORBUTTONDOWN, 0, 0) == FALSE)
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)


    group = SystemGet(SYS_ROOMGROUP, openfile, 0)
    if(button1 == 250)
      ButtonSound()
      if(group > 0)
        SystemSet(SYS_ROOMGROUP, openfile, 0, group-1)
        SystemSet(SYS_ROOMOBJECT, openfile, 0, 0)
    if(button2 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMGROUP, openfile, 0, group+1)
      SystemSet(SYS_ROOMOBJECT, openfile, 0, 0)
    if(button3 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMGROUP, openfile, 1, 0)
      SystemSet(SYS_ROOMGROUP, openfile, 0, group)
      SystemSet(SYS_ROOMOBJECT, openfile, 0, 0)
    if(button4 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMGROUP, openfile, 2, 0)
      SystemSet(SYS_ROOMGROUP, openfile, 0, group)
      SystemSet(SYS_ROOMOBJECT, openfile, 0, 0)
    group = SystemGet(SYS_ROOMGROUP, openfile, 0)
    object = SystemGet(SYS_ROOMOBJECT, openfile, 0)
    object_data = SystemGet(SYS_ROOMOBJECT, openfile, 1)


    if(button5 == 250)
      ButtonSound()
      if(object > 0)
        object--
    if(button6 == 250)
      ButtonSound()
      object++
    if(button7 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMOBJECT, openfile, 1, 0)
    if(button8 == 250)
      ButtonSound()
      SystemSet(SYS_ROOMOBJECT, openfile, 2, 0)
      if(object > 0)
        object--
    if(object_data)
      if(button9 == 250)
        ButtonSound()
        i = 0
        while(i < 22)
          FileWriteByte(String(0), i, FileReadByte(object_data, i))
          i++
        SystemSet(SYS_ROOMOBJECT, openfile, 1, 0)
        object_data = SystemGet(SYS_ROOMOBJECT, openfile, 1)
        i = 0
        while(i < 22)
          if(i < 16 || i > 19)
            FileWriteByte(object_data, i, FileReadByte(String(0), i))
          i++
    SystemSet(SYS_ROOMOBJECT, openfile, 0, object)
    object = SystemGet(SYS_ROOMOBJECT, openfile, 0)
    object_data = SystemGet(SYS_ROOMOBJECT, openfile, 1)








    button1 = ButtonImage(button1, 0.0, 2.0,  2.0, 2.0, "<")
    button2 = ButtonImage(button2,12.0, 2.0,  2.0, 2.0, ">")
    StringClear(String(0))
    StringAppend(String(0), "Group ", 256)
    StringAppendNumber(String(0), group, 256)
    CenterString(WHITE, 7.0, 2.5, String(0))
    button3 = ButtonImage(button3, 0.0, 4.0,  14.0, 2.0, "Add Group")
    button4 = ButtonImage(button4, 0.0, 6.0,  14.0, 2.0, "Delete Group")


    button5 = ButtonImage(button5, 0.0, 8.0,  2.0, 2.0, "<")
    button6 = ButtonImage(button6,12.0, 8.0,  2.0, 2.0, ">")
    StringClear(String(0))
    StringAppend(String(0), "Object ", 256)
    StringAppendNumber(String(0), object, 256)
    CenterString(WHITE, 7.0, 8.5, String(0))
    button7 = ButtonImage(button7, 0.0,10.0,  14.0, 2.0, "Add Object")
    button8 = ButtonImage(button8, 0.0,12.0,  14.0, 2.0, "Delete Object")

    if(object_data)
      button9 = ButtonImage(button9, 0.0,19.0,  14.0, 1.0, "Copy Object")
    else
      button9 = 0


    if(object_data)
      facing = FileReadByte(object_data, 15)
      temp = facing
      facing = WindowSlider(0.5,18.0, 9, 1, facing)
      if(temp != facing)
        if(SystemGet(SYS_KEYDOWN, KEYLSHIFT, 0) || SystemGet(SYS_KEYDOWN, KEYRSHIFT, 0))
          facing = facing & 224
      FileWriteByte(object_data, 15, facing)
      CenterString(WHITE, 11.5, 18.0, "Face")


      // For detecting filename change...
      temp = 0
      if(CheckExtension(object_data, "DDD"))
        temp = 1


      WindowInput(0.5,14.0, 13, object_data, 1)
      StringUppercase(object_data)
      if(CheckExtension(object_data, "DDD"))
        // Default values...
        if(temp == 0)
          FileWriteByte(object_data, 13, (2<<4) | (3))
          FileWriteByte(object_data, 14, (4<<4) | (5))
          


        // Texture options for DDD objects...
        temp = FileReadByte(object_data, 13)
        temp = (temp & 15) | (DDDTextureButtons(0, temp>>4, 15.0)<<4)
        temp = (temp & 240) | DDDTextureButtons(1, temp&15, 16.0)
        FileWriteByte(object_data, 13, temp)

        temp = FileReadByte(object_data, 14)
        temp = (temp & 15) | (DDDTextureButtons(2, temp>>4, 17.0)<<4)
        temp = (temp & 240) | DDDTextureButtons(3, temp&15, 18.0)
        FileWriteByte(object_data, 14, temp)
      else
        // Default values...
        if(temp == 1)
          FileWriteByte(object_data, 13, (15<<4) | (0))
          FileWriteByte(object_data, 14, 0)



        // Standard options for characters and particles...
        percent = FileReadByte(object_data, 13)&240
        subtype = FileReadByte(object_data, 13)&15
        if(percent > 239)
          percent = 255
        percent = WindowSlider(0.5,17.0, 9, 1, percent)
        percent = percent & 240
        StringClear(String(0))
        StringAppendNumber(String(0), percent*100/240, 256)
        StringAppend(String(0), "%", 256)
        CenterString(WHITE, 11.5, 17.0, String(0))


        // Subtype selection...
        subtype = (subtype & 7) | ((WindowYesBox((subtype&8)>>3, -0.5, 16.0)&1)<<3)
        typelist = (typelist & 255) | ((subtype&7)<<8)
        if(FileReadByte(object_data, 0) == 'P')
          // Particle subtype selection (modifies misc7)
          if(subtype & 8)
            // Expanded listing
            typelist = WindowMiniList(0.5,16.0, 13, 8, typelist, "Misc7= 8,Misc7= 9,Misc7=10,Misc7=11,Misc7=12,Misc7=13,Misc7=14,Misc7=15")
          else
            // Normal listing
            typelist = WindowMiniList(0.5,16.0, 13, 8, typelist, "Misc7= 0,Misc7= 1,Misc7= 2,Misc7= 3,Misc7= 4,Misc7= 5,Misc7= 6,Misc7= 7")
        else
          // Character subtype selection (modifies eqcol01)
          if(subtype & 8)
            // Precise subtype listing
            typelist = WindowMiniList(0.5,16.0, 13, 8, typelist, "Eqcol01=  0,Eqcol01= 32,Eqcol01= 64,Eqcol01= 96,Eqcol01=128,Eqcol01=160,Eqcol01=192,Eqcol01=224")
          else
            // Normal subtype listing
            typelist = WindowMiniList(0.5,16.0, 13, 8, typelist, "Default,Captain,SuperCap,Random,Subtype 0,Subtype 1,Subtype 2,Subtype 3")
        subtype = ((typelist>>8)&7) | (subtype & 8)
        FileWriteByte(object_data, 13, (percent&240) | (subtype&15))


        teamlist = (teamlist & 255) | (FileReadByte(object_data, 14)<<8)
        teamlist = WindowMiniList(0.5,15.0, 13, 4, teamlist, "Neutral,Monster,Good,Evil")
        FileWriteByte(object_data, 14, teamlist>>8)



  if(mode == MODE_BRIDGE)
    work_mode = WORK_MODE_BRIDGE
    if(button1 == 255)
      sub_mode = 2
      border_mode = BORDER_MOVE
      move_mode = MOVE_MODE_BRIDGE
    if(button2 == 255)
      sub_mode = 0
      border_mode = BORDER_POINT_PICK
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    if(button2 > 140)
      SystemSet(SYS_ROOMDELETEBRIDGE, openfile, 0, 0)
    if(button3 > 140)
      move_mode = MOVE_MODE_MOVE
      sub_mode = 0
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 0)
        border_mode = BORDER_MOVE
      else
        border_mode = BORDER_POINT_PICK
      if(SystemGet(SYS_CURSORBUTTONDOWN, 0, 0) == FALSE)
        border_mode = BORDER_POINT_PICK
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    button1 = StickyButton(ButtonImage(button1, 0.0, 2.0, 14.0, 2.0, "Plop Drag"))
    button2 = StickyButton(ButtonImage(button2, 0.0, 4.0, 14.0, 2.0, "Delete"))
    button3 = StickyButton(ButtonImage(button3, 0.0, 6.0, 14.0, 2.0, "Pick & Move"))






  if(mode == MODE_HARD_PLOPPER)
    work_mode = WORK_MODE_VERTEX
    sub_mode = 1
    border_mode = BORDER_CROSS_HAIRS
    if(SystemGet(SYS_KEYPRESSED, KEYSPACE, 0))
      button1 = 255
    if(SystemGet(SYS_KEYPRESSED, KEYDELETE, 0))
      SystemSet(SYS_ROOMDELETEVERTEX, openfile, 0, 0)
    if(button1 == 250)
      // Add a vertex...
      SystemSet(SYS_ROOMPLOPVERTEX, openfile, 0, TRUE)
      ButtonSound()
      ClearButtons()
    if(button2 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        SystemSet(SYS_ROOMHARDPLOPPER, openfile, FENCE_SIZE, HARDPLOPPER_FENCE)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound
      ClearButtons()
    if(button3 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        SystemSet(SYS_ROOMHARDPLOPPER, openfile, stair_size | (stair_fix<<8), HARDPLOPPER_STAIR)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound
      ClearButtons()
    if(button4 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        SystemSet(SYS_ROOMHARDPLOPPER, openfile, stair_size | (ledge_base<<9) | (ledge_rand<<10) | ((ledge_height * 29 / 255)<<11), HARDPLOPPER_LEDGE)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound
      ClearButtons()
    if(button5 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        SystemSet(SYS_ROOMHARDPLOPPER, openfile, stair_size | (ledge_base<<9) | (ledge_rand<<10) | ((ledge_height * 29 / 255)<<11), HARDPLOPPER_LEDGE_LOOP)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound
      ClearButtons()
    if(button6 == 255)
      ButtonSound()
      SystemSet(SYS_ROOMHARDPLOPPER, openfile, (decaltype>>4)&15, HARDPLOPPER_DECAL)
      SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      ClearButtons()
    if(button7 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        temp = decaltype >> 6
        if(temp == 0)
          SystemSet(SYS_ROOMHARDPLOPPER, openfile, 255, HARDPLOPPER_PAVEMENT)
        if(temp == 1)
          SystemSet(SYS_ROOMHARDPLOPPER, openfile, 16 | (9<<11), HARDPLOPPER_BORDER)
        if(temp == 2)
          SystemSet(SYS_ROOMHARDPLOPPER, openfile, 16 | (11<<11), HARDPLOPPER_BORDER)
        if(temp == 3)
          SystemSet(SYS_ROOMHARDPLOPPER, openfile, 16 | (13<<11), HARDPLOPPER_BORDER)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound()
      ClearButtons()
    if(button8 == 255)
      if(SystemGet(SYS_ROOMSELECT, 0, 0) > 1)
        ButtonSound()
        SystemSet(SYS_ROOMHARDPLOPPER, openfile, stair_size | (ledge_base<<9) | (ledge_rand<<10) | ((ledge_height * 29 / 255)<<11), HARDPLOPPER_MINE)
        SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
      else
        BuzzerSound
      ClearButtons()
    button1 = ButtonImage(button1, 0.0, 2.0, 14.0, 1.5, "Vertex Chain")
    button2 = ButtonImage(button2, 0.0, 3.5, 14.0, 1.5, "Fence")
    button3 = ButtonImage(button3, 0.0, 5.0, 14.0, 1.5, "Stairs")
    button4 = ButtonImage(button4, 0.0, 6.5, 14.0, 1.5, "Ledge")
    button5 = ButtonImage(button5, 0.0, 8.0, 14.0, 1.5, "Ledge Loop")
    button6 = ButtonImage(button6, 0.0, 9.5, 14.0, 1.5, "Decal")
    temp = decaltype >> 6
    if(temp == 0)
      button7 = ButtonImage(button7, 0.0,11.0, 14.0, 1.5, "Pavement")
    if(temp == 1)
      button7 = ButtonImage(button7, 0.0,11.0, 14.0, 1.5, "Lawn Border")
    if(temp == 2)
      button7 = ButtonImage(button7, 0.0,11.0, 14.0, 1.5, "Cave Border")
    if(temp == 3)
      button7 = ButtonImage(button7, 0.0,11.0, 14.0, 1.5, "Wood Border")
    button8 = ButtonImage(button8, 0.0, 12.5, 14.0, 1.5, "Mine Track")

    StringAppend(DEBUG_STRING, "Space=Plop Control Vertex", 256)



    stair_fix = WindowYesBox(stair_fix, 1.0,14.0)
    WindowString(WHITE, 2.0,14.0, "Normalize")

    ledge_base = WindowYesBox(ledge_base, 1.0,15.0)
    WindowString(WHITE, 2.0,15.0, "Base Ledge")

    ledge_rand = WindowYesBox(ledge_rand, 1.0,16.0)
    WindowString(WHITE, 2.0,16.0, "Rand Ledge")

    if(stair_size > 44 && stair_size < 84)
      stair_size = 64
    stair_size = WindowSlider(1.0,17.0, 6, 1, stair_size)
    StringClear(String(0))
    StringAppend(String(0), "Wid", 255)
    StringAppendNumber(String(0), stair_size, 255)
    WindowString(WHITE, 7.0,17.0, String(0))

    if(ledge_height > 44 && ledge_height < 84)
      ledge_height = 64
    ledge_height = WindowSlider(1.0,18.0, 6, 1, ledge_height)
    StringClear(String(0))
    StringAppend(String(0), "Hit", 255)
    StringAppendNumber(String(0), ledge_height, 255)
    WindowString(WHITE, 7.0,18.0, String(0))

    decaltype = WindowSlider(1.0,19.0, 6, 1, decaltype)
    StringClear(String(0))
    StringAppend(String(0), "Decal", 256)
    StringAppendNumber(String(0), (decaltype>>4)&15, 256)
    WindowString(WHITE, 7.0,19.0, String(0))




  if(mode == MODE_ROOM_INFO)
    work_mode = WORK_MODE_VERTEX
    sub_mode = SUB_MODE_NONE
    room_flags = FileReadByte(openfile, 32)
    water_type = (FileReadByte(openfile, 33)<<8) | (water_type & 255)
    if((water_type >> 8) > 2)
      water_type = water_type & 255
    water_level = FileReadByte(openfile, 34)



    // Metal Box subwindow
    TitleBar(FALSE, -13.0, -8.0, "Metal Box")
    WindowBorder(FALSE, -19.0, -8.0, 12,  4, BORDER_BOX)
    WRAND.RowIcon(0.0, 0.0, 35, openfile, FALSE, TRUE)
    if(FileReadByte(openfile, 35) == ITEM_NONE)
      CenterString(WHITE, 7.0, 1.0, "Random")



    // Water Stuff subwindow
    TitleBar(FALSE, -13.0, 0.0, "Water")
    WindowBorder(FALSE, -19.0, 0.0, 12,  6, BORDER_BOX)
    if(button1 == 255)
      ButtonSound()
      if(water_level == 125)
        water_level = 0
      else
        water_level = 125
    if(button2 == 255)
      ButtonSound()
      if(water_level > 0)
        water_level--
    if(button3 == 255)
      ButtonSound()
      if(water_level < 255)
        water_level++
    StringClear(String(0))
    StringAppendNumber(String(0), (water_level*1000/255)-500, 5)
    CenterString(WHITE, 6.0,2.5, String(0))
    button2 = ButtonImage(button2, 0.0, 2.0, 2.0, 2.0, "<")
    button3 = ButtonImage(button3,10.0, 2.0, 2.0, 2.0, ">")

    water_level = WindowSlider(0.0,1.0, 7, 1, water_level)
    WindowString(WHITE, 7.0,1.0, "Level")
    button1 = ButtonImage(button1, 0.0, 4.0, 12.0, 2.0, "Reset Level")
    water_type = WindowMiniList(0.0, 0.0, 12, 3, water_type, "Water,Lava,Sand")
    FileWriteByte(openfile, 33, (water_type>>8))
    FileWriteByte(openfile, 34, water_level)
    WindowBorder(FALSE, -20.0, -13.0, 0,  0, BORDER_NONE)  // Return to previous window area...



//    // CRANDOM.SRC subwindow
//    TitleBar(FALSE, -13.0, -9.0, "CPORTAL")
//    WindowBorder(FALSE, -19.0, -9.0, 12,  4, BORDER_BOX)
//    i = "Default,Random,Porc,Lumpkin,Carrion,Zombi,Bat,Rat,Slime,Mushi,GrubMum,Tranch,Wraithe,Wuff,Roachie,Gremf"
//
//    // Subtype 3
//    temp = (FileReadByte(openfile, 39) << 8) | ((randlist>>24)&255)
//    temp = WindowMiniList(1.0, 3.0, 11, 16, temp, i)
//    FileWriteByte(openfile, 39, (temp>>8))
//    WindowString(WHITE, 0.0,3.0, "3")
//    randlist = (randlist & x00FFFFFF) | ((temp&255)<<24)
//
//    // Subtype 2
//    temp = (FileReadByte(openfile, 38) << 8) | ((randlist>>16)&255)
//    temp = WindowMiniList(1.0, 2.0, 11, 16, temp, i)
//    FileWriteByte(openfile, 38, (temp>>8))
//    WindowString(WHITE, 0.0,2.0, "2")
//    randlist = (randlist & xFF00FFFF) | ((temp&255)<<16)
//
//    // Subtype 1
//    temp = (FileReadByte(openfile, 37) << 8) | ((randlist>>8)&255)
//    temp = WindowMiniList(1.0, 1.0, 11, 16, temp, i)
//    FileWriteByte(openfile, 37, (temp>>8))
//    WindowString(WHITE, 0.0,1.0, "1")
//    randlist = (randlist & xFFFF00FF) | ((temp&255)<<8)
//
//    // Subtype 0
//    temp = (FileReadByte(openfile, 36) << 8) | ((randlist)&255)
//    temp = WindowMiniList(1.0, 0.0, 11, 16, temp, i)
//    FileWriteByte(openfile, 36, (temp>>8))
//    WindowString(WHITE, 0.0,0.0, "0")
//    randlist = (randlist & xFFFFFF00) | (temp&255)
//
//    WindowBorder(FALSE, -20.0, -13.0, 0,  0, BORDER_NONE)  // Return to previous window area...






  // Allow user to change mode...
  SystemSet(SYS_CURRENTITEM, 0, 0, 500)
  modelist = WindowMiniList(0.0, 0.5, 14, 10, modelist, "Vertex,Triangle,Texture,Exterior Wall,Doors,Waypoint,Object Group,Bridge,Hard Plopper,Room Info")
  if(mode != (modelist>>8))
    mode = modelist>>8
    sub_mode = 0
    border_mode = FALSE
    move_mode = 0
    ClearButtons()
    SystemSet(SYS_ROOMSELECT, SELECT_ALL, 0, FALSE)
    trim_mode = TRIM_MODE_NONE















  // Main room map display area
  WindowBorder(border_mode, -5.0, -13.0, 25,  25, BORDER_BOX)


  // Figure out where the camera really is
  zoom = 0.5 * screenx * ((260-zoom_slider)/255.0)
  cx = sin((camspinx * 360) >> 16)
  camspinx = camspinx+16384
  cy = sin((camspinx * 360) >> 16)
  camspinx = camspinx-16384
  cz = sin((camspiny * 360) >> 16)
  cx = cx * cz
  cy = cy * cz
  camspiny = camspiny+16384
  cz = sin((camspiny * 360) >> 16)
  camspiny = camspiny-16384
  tx = (tarx-32768) * 0.01
  ty = (tary-32768) * 0.01
  tz = (tarz-32768) * 0.01
  cx = (cx*zoom) + tx
  cy = (cy*zoom) + ty
  cz = (cz*zoom) + tz


  // Target movement with number keys...
  if(!top_view)
    velx = 0.0
    vely = 0.0
    velz = 0.0
    if(SystemGet(SYS_KEYDOWN, KEYUP, 0) || SystemGet(SYS_KEYDOWN, KEY8, 0))
      vely = vely-zoom
    if(SystemGet(SYS_KEYDOWN, KEYDOWN, 0) || SystemGet(SYS_KEYDOWN, KEY2, 0))
      vely = vely+zoom
    if(SystemGet(SYS_KEYDOWN, KEYLEFT, 0) || SystemGet(SYS_KEYDOWN, KEY4, 0))
      velx = velx-zoom
    if(SystemGet(SYS_KEYDOWN, KEYRIGHT, 0) || SystemGet(SYS_KEYDOWN, KEY6, 0))
      velx = velx+zoom
    if(SystemGet(SYS_KEYDOWN, KEY9, 0))
      velz = velz+zoom
    if(SystemGet(SYS_KEYDOWN, KEY3, 0))
      velz = velz-zoom
    if(SystemGet(SYS_KEYDOWN, KEYPLUS, 0))
      temp = zoom_slider + 3
      if(temp > 255)
        temp = 255
      zoom_slider = temp
    if(SystemGet(SYS_KEYDOWN, KEYMINUS, 0))
      temp = zoom_slider - 3
      if(temp < 0)
        temp = 0
      zoom_slider = temp






    sine = sin((camspinx * 360) >> 16)
    cosine = sin(((camspinx * 360) >> 16) + 90)
    tarx = tarx - (cosine*velx) - (sine*vely)
    tary = tary + (sine*velx) - (cosine*vely)
    tarz = tarz + velz


  // Camera movement...
  if(top_view)
    cx = 0.0
    cy = 0.1
    cz = 160.0
    tx = 0.0
    ty = 0.0
    tz = 0.0
  else
    curx = SystemGet(SYS_CURSORPOS, 0, 0)
    cury = SystemGet(SYS_CURSORPOS, 0, 1)
    if(oldx < 2500 && oldy < 2500)
      temp = SystemGet(SYS_CURSORBUTTONDOWN, 0, 1)
      temp = temp + SystemGet(SYS_CURSORBUTTONDOWN, 0, 2)
      if(temp == 1)
        camspinx = camspinx - ((curx - oldx) * 50)
        temp = camspiny + ((cury - oldy) * 50)
        if(temp < 33500)
          temp = 33500
        if(temp > 65535)
          temp = 65535
        camspiny = temp
      if(temp == 2)
        temp = zoom_slider + ((oldy - cury)/10)
        if(temp < 0)
          temp = 0
        if(temp > 255)
          temp = 255
        zoom_slider = temp
    oldx = curx
    oldy = cury


  // Draw the 3D window...
  SystemSet(SYS_MODELMOVE, 0, 0, move_mode)
  Window3DStart(0.0, 0.0, 25.0, 25.0, FALSE)
  Window3DPosition(tx, ty, tz, WIN_TARGET)
  Window3DPosition(cx, cy, cz, WIN_CAMERA)
  Window3DPosition(0.4, 0.4, 500.0, WIN_FRUSTUM)
  sub_mode = sub_mode&15
  work_mode = work_mode&15
  Window3DRoom(0.0, 0.0, 0.0, openfile, GRID_COLOR, 0, ROOM_MODE_GRID | work_mode)
  Window3DRoom(0.0, 0.0, 0.0, openfile, WHITE, 0, ROOM_MODE_TRIANGLE)
  Window3DRoom(0.0, 0.0, 0.0, openfile, DARK_RED, 0, ROOM_MODE_VERTEX)
  Window3DRoom(0.0, 0.0, 0.0, openfile, YELLOW, 0, ROOM_MODE_EXTERIOR_WALL)
  Window3DRoom(0.0, 0.0, 0.0, openfile, BLUE, 0, ROOM_MODE_WAYPOINT)
  Window3DRoom(0.0, 0.0, 0.0, openfile, WHITE, 0, ROOM_MODE_OBJECT_GROUP | work_mode)
  Window3DRoom(0.0, 0.0, 0.0, openfile, MAGENTA, 0, ROOM_MODE_BRIDGE | sub_mode)
  Window3DPosition(frustumx, frustumy, 500.0, WIN_FRUSTUM)
  Window3DEnd()


//-----------------------------------------------------------------------
