#define scaling           self.stat00w
#define screen            self.stat01w
#define rgb_bit           self.stat02w
#define z_bit             self.stat03w
#define mode              self.stat04w
#define sound_volume      self.stat05l
#define music_volume      self.stat05h
#define button_one        self.stat06l
#define pretty_water_on   self.stat07l
#define pretty_shadows_on self.stat07h
#define cartoon_mode      self.stat08l
#define mip_on            self.stat08h
#define fastandugly_on    self.stat09l
#define flip_pan_on       self.stat09h
#define skip_intro_on     self.stat10l

//-----------------------------------------------------------------------
Spawn()
  int self, file, offset
  self = FindSelf()
  file = "FILE:CONFIG.DAT"
  scaling           = FileReadByte(file, 64)<<8
  screen            = FileReadByte(file, 68)<<8
  rgb_bit           = ((FileReadByte(file, 69)-8)>>3)<<8
  z_bit             = ((FileReadByte(file, 70)-8)>>3)<<8
  mode              = FileReadByte(file, 72)<<8
  sound_volume      = FileReadByte(file, 65)
  music_volume      = FileReadByte(file, 66)
  mip_on            = FileReadByte(file, 98)
  pretty_water_on   = FileReadByte(file, 99)
  pretty_shadows_on = FileReadByte(file, 71)&1
  skip_intro_on     = (FileReadByte(file, 71)>>1)&1
  cartoon_mode      = FileReadByte(file, 100)
  fastandugly_on    = FileReadByte(file, 101)
  flip_pan_on       = FileReadByte(file, 102)
  button_one = 0

//-----------------------------------------------------------------------
Refresh()
  int    self, file
  int    i
  float screenx

  screenx = SystemGet(SYS_SCREENPARAMS, 0, 2)

  // Allow us to save data in the window's properties...
  self = FindSelf()



  // Button actions
  if(button_one == 250)
    // Save settings
    file = "FILE:CONFIG.DAT"
    FileWriteByte(file, 64, scaling>>8)
    FileWriteByte(file, 65, sound_volume)
    FileWriteByte(file, 66, music_volume)
    FileWriteByte(file, 98, mip_on)
    FileWriteByte(file, 99, pretty_water_on)
    FileWriteByte(file, 71, (pretty_shadows_on&1) | ((skip_intro_on&1)<<1))
    FileWriteByte(file, 100, cartoon_mode)
    FileWriteByte(file, 101, fastandugly_on)
    FileWriteByte(file, 102, flip_pan_on)


    // Save settings and mark video as needing a test if changed...
    screen = screen >> 8
    rgb_bit = ((rgb_bit>>8)<<3)+8
    z_bit = ((z_bit>>8)<<3)+8
    mode = mode >> 8
    if(FileReadByte(file, 68) != screen)
      FileWriteByte(file, 68, screen)
      FileWriteByte(file, 73, TRUE)
    if(FileReadByte(file, 69) != rgb_bit)
      FileWriteByte(file, 69, rgb_bit)
      FileWriteByte(file, 73, TRUE)
    if(FileReadByte(file, 70) != z_bit)
      FileWriteByte(file, 70, z_bit)
      FileWriteByte(file, 73, TRUE)
    if(FileReadByte(file, 72) != mode)
      FileWriteByte(file, 72, mode)
      FileWriteByte(file, 73, TRUE)
    ButtonSound()
    Spawn(WINDOW, screenx / 2, 150.0, 1.0, "FILE:WMAIN.RUN")
    GoPoof(POOF_SELF)





  // Title bar (no drag)
  TitleBar(FALSE, 0.0, -8.5, StringLanguage(2))   // Settings



  // Note window
  i = StringLength(StringLanguage(36))
  WindowBorder(FALSE, -0.5*i, 10.85, i, 2, BORDER_FULL)
  WindowString(WHITE, 0.0, 0.0, StringLanguage(36))
  WindowString(WHITE, 0.0, 1.0, StringLanguage(37))


  // Main window
  WindowBorder(FALSE, -10.0, -8.5, 20, 17, BORDER_FULL)


  // Button images
  button_one = ButtonImage(button_one, 0.0, 15.0, 20.0, 2.0, StringLanguage(20))


  // Skip intro on/off
  skip_intro_on = WindowYesBox(skip_intro_on, 0.5, 14.0)
  WindowString(White, 2.0, 14.0, StringLanguage(259))

  // Flip speaker pan...
  flip_pan_on = WindowYesBox(flip_pan_on, 0.5, 13.0)
  WindowString(White, 2.0, 13.0, StringLanguage(206))
  SystemSet(SYS_FLIPPAN, 0, 0, flip_pan_on)


  // Fast and Ugly mode
  WindowString(White, 2.0, 12.0, StringLanguage(207))
  if(WindowYesBox(fastandugly_on, 0.5, 12.0) != fastandugly_on)
    fastandugly_on = (fastandugly_on+1)&1
    SystemSet(SYS_FASTANDUGLY, 0, 0, fastandugly_on)
    UpdateFiles(UPDATE_RELOADALLTEXTURES)


  // Pretty Shadows
  pretty_shadows_on = WindowYesBox(pretty_shadows_on, 0.5, 11.0)
  WindowString(White, 2.0, 11.0, StringLanguage(208))
  // maybe I should add runtime switch via SystemSet...

  // Pretty Water
  pretty_water_on = WindowYesBox(pretty_water_on, 0.5, 10.0)
  WindowString(White, 2.0, 10.0, StringLanguage(209))
  SystemSet(SYS_WATERLAYERSACTIVE, 0, 0, pretty_water_on)


  // Terrain lines
  i = (WindowYesBox(cartoon_mode&2, 0.5, 9.0)<<1)
  WindowString(White, 2.0, 9.0, StringLanguage(210))


  // Character Lines
  i = i | WindowYesBox(cartoon_mode&1, 0.5, 8.0)
  WindowString(White, 2.0, 8.0, StringLanguage(211))
  cartoon_mode = i
  SystemSet(SYS_CARTOONMODE, 0, 0, cartoon_mode)


  // Mip mapping
  WindowString(WHITE, 2.0, 7.0, StringLanguage(212))
  if(WindowYesBox(mip_on, 0.5, 7.0) != mip_on)
    mip_on = (mip_on+1)&1
    SystemSet(SYS_MIPMAPACTIVE, 0, 0, mip_on)
    UpdateFiles(UPDATE_RELOADALLTEXTURES)


  // Window scaling...
  WindowString(WHITE, 0.0, 6.0, StringLanguage(34))
  scaling = WindowMiniList(8.0, 6.0, 12, 4, scaling, StringLanguage(35))
  SystemSet(SYS_WINDOWSCALE, 0, 0, (scaling&768)<<2)



  // Volume sliders
  WindowString(WHITE, 0.0, 5.0, StringLanguage(33))
  music_volume = WindowSlider(8.0, 5.0, 12, 1, music_volume)
  SystemSet(SYS_MUSICVOLUME, 0, 0, music_volume)


  WindowString(WHITE, 0.0, 4.0, StringLanguage(32))
  sound_volume = WindowSlider(8.0, 4.0, 12, 1, sound_volume)
  SystemSet(SYS_SFXVOLUME, 0, 0, sound_volume)


  // Screen settings...
  WindowString(WHITE, 0.0, 3.0, StringLanguage(30))
  mode = WindowMiniList(8.0, 3.0, 12, 2, mode, StringLanguage(31))

  WindowString(WHITE, 0.0, 2.0, StringLanguage(213))
  z_bit = WindowMiniList(8.0, 2.0, 12, 4, z_bit, "8 bit,16 bit,24 bit,32 bit")

  WindowString(WHITE, 0.0, 1.0, StringLanguage(28))
  rgb_bit = WindowMiniList(8.0, 1.0, 12, 4, rgb_bit, "8 bit,16 bit,24 bit,32 bit")

  WindowString(WHITE, 0.0, 0.0, StringLanguage(27))
  screen = WindowMiniList(8.0, 0.0, 12, 11, screen, "320x200,320x240,640x400,640x480,800x600,1024x768,1280x720,1280x1024,1366x768,1600x1200,1920x1080")


//-----------------------------------------------------------------------
